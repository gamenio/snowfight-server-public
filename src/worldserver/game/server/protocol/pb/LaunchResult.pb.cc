// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LaunchResult.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "LaunchResult.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
class LaunchResultDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LaunchResult>
     _instance;
} _LaunchResult_default_instance_;

namespace protobuf_LaunchResult_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _LaunchResult_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LaunchResult_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_LaunchResult_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LaunchResult::kLauncherFieldNumber;
const int LaunchResult::kProjectileFieldNumber;
const int LaunchResult::kTargetFieldNumber;
const int LaunchResult::kStatusFieldNumber;
const int LaunchResult::kPositionXFieldNumber;
const int LaunchResult::kPositionYFieldNumber;
const int LaunchResult::kAttackInfoCounterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LaunchResult::LaunchResult()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LaunchResult_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:LaunchResult)
}
LaunchResult::LaunchResult(const LaunchResult& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&launcher_, &from.launcher_,
    static_cast<size_t>(reinterpret_cast<char*>(&attack_info_counter_) -
    reinterpret_cast<char*>(&launcher_)) + sizeof(attack_info_counter_));
  // @@protoc_insertion_point(copy_constructor:LaunchResult)
}

void LaunchResult::SharedCtor() {
  ::memset(&launcher_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attack_info_counter_) -
      reinterpret_cast<char*>(&launcher_)) + sizeof(attack_info_counter_));
  _cached_size_ = 0;
}

LaunchResult::~LaunchResult() {
  // @@protoc_insertion_point(destructor:LaunchResult)
  SharedDtor();
}

void LaunchResult::SharedDtor() {
}

void LaunchResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const LaunchResult& LaunchResult::default_instance() {
  protobuf_LaunchResult_2eproto::InitDefaults();
  return *internal_default_instance();
}

LaunchResult* LaunchResult::New(::google::protobuf::Arena* arena) const {
  LaunchResult* n = new LaunchResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LaunchResult::Clear() {
// @@protoc_insertion_point(message_clear_start:LaunchResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&launcher_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attack_info_counter_) -
      reinterpret_cast<char*>(&launcher_)) + sizeof(attack_info_counter_));
  _internal_metadata_.Clear();
}

bool LaunchResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:LaunchResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 launcher = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &launcher_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 projectile = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &projectile_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float position_x = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &position_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float position_y = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &position_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 attack_info_counter = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attack_info_counter_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LaunchResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LaunchResult)
  return false;
#undef DO_
}

void LaunchResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LaunchResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 launcher = 1;
  if (this->launcher() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->launcher(), output);
  }

  // uint32 projectile = 2;
  if (this->projectile() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->projectile(), output);
  }

  // uint32 target = 3;
  if (this->target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->target(), output);
  }

  // int32 status = 4;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->status(), output);
  }

  // float position_x = 5;
  if (this->position_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->position_x(), output);
  }

  // float position_y = 6;
  if (this->position_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->position_y(), output);
  }

  // uint32 attack_info_counter = 7;
  if (this->attack_info_counter() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->attack_info_counter(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:LaunchResult)
}

size_t LaunchResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LaunchResult)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 launcher = 1;
  if (this->launcher() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->launcher());
  }

  // uint32 projectile = 2;
  if (this->projectile() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->projectile());
  }

  // uint32 target = 3;
  if (this->target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target());
  }

  // int32 status = 4;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // float position_x = 5;
  if (this->position_x() != 0) {
    total_size += 1 + 4;
  }

  // float position_y = 6;
  if (this->position_y() != 0) {
    total_size += 1 + 4;
  }

  // uint32 attack_info_counter = 7;
  if (this->attack_info_counter() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->attack_info_counter());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LaunchResult::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const LaunchResult*>(&from));
}

void LaunchResult::MergeFrom(const LaunchResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LaunchResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.launcher() != 0) {
    set_launcher(from.launcher());
  }
  if (from.projectile() != 0) {
    set_projectile(from.projectile());
  }
  if (from.target() != 0) {
    set_target(from.target());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.position_x() != 0) {
    set_position_x(from.position_x());
  }
  if (from.position_y() != 0) {
    set_position_y(from.position_y());
  }
  if (from.attack_info_counter() != 0) {
    set_attack_info_counter(from.attack_info_counter());
  }
}

void LaunchResult::CopyFrom(const LaunchResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LaunchResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaunchResult::IsInitialized() const {
  return true;
}

void LaunchResult::Swap(LaunchResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LaunchResult::InternalSwap(LaunchResult* other) {
  using std::swap;
  swap(launcher_, other->launcher_);
  swap(projectile_, other->projectile_);
  swap(target_, other->target_);
  swap(status_, other->status_);
  swap(position_x_, other->position_x_);
  swap(position_y_, other->position_y_);
  swap(attack_info_counter_, other->attack_info_counter_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string LaunchResult::GetTypeName() const {
  return "LaunchResult";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LaunchResult

// uint32 launcher = 1;
void LaunchResult::clear_launcher() {
  launcher_ = 0u;
}
::google::protobuf::uint32 LaunchResult::launcher() const {
  // @@protoc_insertion_point(field_get:LaunchResult.launcher)
  return launcher_;
}
void LaunchResult::set_launcher(::google::protobuf::uint32 value) {
  
  launcher_ = value;
  // @@protoc_insertion_point(field_set:LaunchResult.launcher)
}

// uint32 projectile = 2;
void LaunchResult::clear_projectile() {
  projectile_ = 0u;
}
::google::protobuf::uint32 LaunchResult::projectile() const {
  // @@protoc_insertion_point(field_get:LaunchResult.projectile)
  return projectile_;
}
void LaunchResult::set_projectile(::google::protobuf::uint32 value) {
  
  projectile_ = value;
  // @@protoc_insertion_point(field_set:LaunchResult.projectile)
}

// uint32 target = 3;
void LaunchResult::clear_target() {
  target_ = 0u;
}
::google::protobuf::uint32 LaunchResult::target() const {
  // @@protoc_insertion_point(field_get:LaunchResult.target)
  return target_;
}
void LaunchResult::set_target(::google::protobuf::uint32 value) {
  
  target_ = value;
  // @@protoc_insertion_point(field_set:LaunchResult.target)
}

// int32 status = 4;
void LaunchResult::clear_status() {
  status_ = 0;
}
::google::protobuf::int32 LaunchResult::status() const {
  // @@protoc_insertion_point(field_get:LaunchResult.status)
  return status_;
}
void LaunchResult::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:LaunchResult.status)
}

// float position_x = 5;
void LaunchResult::clear_position_x() {
  position_x_ = 0;
}
float LaunchResult::position_x() const {
  // @@protoc_insertion_point(field_get:LaunchResult.position_x)
  return position_x_;
}
void LaunchResult::set_position_x(float value) {
  
  position_x_ = value;
  // @@protoc_insertion_point(field_set:LaunchResult.position_x)
}

// float position_y = 6;
void LaunchResult::clear_position_y() {
  position_y_ = 0;
}
float LaunchResult::position_y() const {
  // @@protoc_insertion_point(field_get:LaunchResult.position_y)
  return position_y_;
}
void LaunchResult::set_position_y(float value) {
  
  position_y_ = value;
  // @@protoc_insertion_point(field_set:LaunchResult.position_y)
}

// uint32 attack_info_counter = 7;
void LaunchResult::clear_attack_info_counter() {
  attack_info_counter_ = 0u;
}
::google::protobuf::uint32 LaunchResult::attack_info_counter() const {
  // @@protoc_insertion_point(field_get:LaunchResult.attack_info_counter)
  return attack_info_counter_;
}
void LaunchResult::set_attack_info_counter(::google::protobuf::uint32 value) {
  
  attack_info_counter_ = value;
  // @@protoc_insertion_point(field_set:LaunchResult.attack_info_counter)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
