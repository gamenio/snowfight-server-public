// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlayerLogin.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PlayerLogin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
class PlayerLogin_StatStageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerLogin_StatStage>
     _instance;
} _PlayerLogin_StatStage_default_instance_;
class PlayerLoginDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerLogin>
     _instance;
} _PlayerLogin_default_instance_;

namespace protobuf_PlayerLogin_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _PlayerLogin_StatStage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerLogin_StatStage_default_instance_);_PlayerLogin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerLogin_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_PlayerLogin_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLogin_StatStage::kTypeFieldNumber;
const int PlayerLogin_StatStage::kStageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLogin_StatStage::PlayerLogin_StatStage()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PlayerLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerLogin.StatStage)
}
PlayerLogin_StatStage::PlayerLogin_StatStage(const PlayerLogin_StatStage& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&stage_) -
    reinterpret_cast<char*>(&type_)) + sizeof(stage_));
  // @@protoc_insertion_point(copy_constructor:PlayerLogin.StatStage)
}

void PlayerLogin_StatStage::SharedCtor() {
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stage_) -
      reinterpret_cast<char*>(&type_)) + sizeof(stage_));
  _cached_size_ = 0;
}

PlayerLogin_StatStage::~PlayerLogin_StatStage() {
  // @@protoc_insertion_point(destructor:PlayerLogin.StatStage)
  SharedDtor();
}

void PlayerLogin_StatStage::SharedDtor() {
}

void PlayerLogin_StatStage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PlayerLogin_StatStage& PlayerLogin_StatStage::default_instance() {
  protobuf_PlayerLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerLogin_StatStage* PlayerLogin_StatStage::New(::google::protobuf::Arena* arena) const {
  PlayerLogin_StatStage* n = new PlayerLogin_StatStage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLogin_StatStage::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerLogin.StatStage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stage_) -
      reinterpret_cast<char*>(&type_)) + sizeof(stage_));
  _internal_metadata_.Clear();
}

bool PlayerLogin_StatStage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:PlayerLogin.StatStage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 stage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerLogin.StatStage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerLogin.StatStage)
  return false;
#undef DO_
}

void PlayerLogin_StatStage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerLogin.StatStage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // int32 stage = 2;
  if (this->stage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->stage(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:PlayerLogin.StatStage)
}

size_t PlayerLogin_StatStage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerLogin.StatStage)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 stage = 2;
  if (this->stage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stage());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLogin_StatStage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PlayerLogin_StatStage*>(&from));
}

void PlayerLogin_StatStage::MergeFrom(const PlayerLogin_StatStage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerLogin.StatStage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.stage() != 0) {
    set_stage(from.stage());
  }
}

void PlayerLogin_StatStage::CopyFrom(const PlayerLogin_StatStage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerLogin.StatStage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLogin_StatStage::IsInitialized() const {
  return true;
}

void PlayerLogin_StatStage::Swap(PlayerLogin_StatStage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLogin_StatStage::InternalSwap(PlayerLogin_StatStage* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(stage_, other->stage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string PlayerLogin_StatStage::GetTypeName() const {
  return "PlayerLogin.StatStage";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLogin_StatStage

// int32 type = 1;
void PlayerLogin_StatStage::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 PlayerLogin_StatStage::type() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.StatStage.type)
  return type_;
}
void PlayerLogin_StatStage::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.StatStage.type)
}

// int32 stage = 2;
void PlayerLogin_StatStage::clear_stage() {
  stage_ = 0;
}
::google::protobuf::int32 PlayerLogin_StatStage::stage() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.StatStage.stage)
  return stage_;
}
void PlayerLogin_StatStage::set_stage(::google::protobuf::int32 value) {
  
  stage_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.StatStage.stage)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLogin::kGuidFieldNumber;
const int PlayerLogin::kScreenWidthFieldNumber;
const int PlayerLogin::kScreenHeightFieldNumber;
const int PlayerLogin::kLangFieldNumber;
const int PlayerLogin::kCountryFieldNumber;
const int PlayerLogin::kCharNameFieldNumber;
const int PlayerLogin::kCharIdFieldNumber;
const int PlayerLogin::kTotalKillsFieldNumber;
const int PlayerLogin::kPropertyFieldNumber;
const int PlayerLogin::kLevelFieldNumber;
const int PlayerLogin::kExperienceFieldNumber;
const int PlayerLogin::kStatStageListFieldNumber;
const int PlayerLogin::kControllerTypeFieldNumber;
const int PlayerLogin::kTraineeFieldNumber;
const int PlayerLogin::kRewardStageFieldNumber;
const int PlayerLogin::kDailyRewardDaysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLogin::PlayerLogin()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_PlayerLogin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerLogin)
}
PlayerLogin::PlayerLogin(const PlayerLogin& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      stat_stage_list_(from.stat_stage_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lang_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lang().size() > 0) {
    lang_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_);
  }
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.country().size() > 0) {
    country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
  }
  char_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.char_name().size() > 0) {
    char_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.char_name_);
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&daily_reward_days_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(daily_reward_days_));
  // @@protoc_insertion_point(copy_constructor:PlayerLogin)
}

void PlayerLogin::SharedCtor() {
  lang_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  char_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&daily_reward_days_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(daily_reward_days_));
  _cached_size_ = 0;
}

PlayerLogin::~PlayerLogin() {
  // @@protoc_insertion_point(destructor:PlayerLogin)
  SharedDtor();
}

void PlayerLogin::SharedDtor() {
  lang_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  char_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const PlayerLogin& PlayerLogin::default_instance() {
  protobuf_PlayerLogin_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerLogin* PlayerLogin::New(::google::protobuf::Arena* arena) const {
  PlayerLogin* n = new PlayerLogin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stat_stage_list_.Clear();
  lang_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  char_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&daily_reward_days_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(daily_reward_days_));
  _internal_metadata_.Clear();
}

bool PlayerLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:PlayerLogin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 screen_width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &screen_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 screen_height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &screen_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string lang = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lang()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lang().data(), static_cast<int>(this->lang().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PlayerLogin.lang"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string country = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->country().data(), static_cast<int>(this->country().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PlayerLogin.country"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string char_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_char_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->char_name().data(), static_cast<int>(this->char_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PlayerLogin.char_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 char_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &char_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 total_kills = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_kills_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 property = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &property_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 experience = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &experience_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PlayerLogin.StatStage stat_stage_list = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stat_stage_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 controller_type = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &controller_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool trainee = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &trainee_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 reward_stage = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_stage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 daily_reward_days = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &daily_reward_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerLogin)
  return false;
#undef DO_
}

void PlayerLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->guid(), output);
  }

  // uint32 screen_width = 2;
  if (this->screen_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->screen_width(), output);
  }

  // uint32 screen_height = 3;
  if (this->screen_height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->screen_height(), output);
  }

  // string lang = 4;
  if (this->lang().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lang().data(), static_cast<int>(this->lang().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlayerLogin.lang");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->lang(), output);
  }

  // string country = 5;
  if (this->country().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->country().data(), static_cast<int>(this->country().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlayerLogin.country");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->country(), output);
  }

  // string char_name = 6;
  if (this->char_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->char_name().data(), static_cast<int>(this->char_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PlayerLogin.char_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->char_name(), output);
  }

  // uint32 char_id = 7;
  if (this->char_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->char_id(), output);
  }

  // int32 total_kills = 8;
  if (this->total_kills() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->total_kills(), output);
  }

  // int32 property = 9;
  if (this->property() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->property(), output);
  }

  // uint32 level = 10;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->level(), output);
  }

  // int32 experience = 11;
  if (this->experience() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->experience(), output);
  }

  // repeated .PlayerLogin.StatStage stat_stage_list = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stat_stage_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      12, this->stat_stage_list(static_cast<int>(i)), output);
  }

  // int32 controller_type = 13;
  if (this->controller_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->controller_type(), output);
  }

  // bool trainee = 14;
  if (this->trainee() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->trainee(), output);
  }

  // int32 reward_stage = 15;
  if (this->reward_stage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->reward_stage(), output);
  }

  // int32 daily_reward_days = 16;
  if (this->daily_reward_days() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->daily_reward_days(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:PlayerLogin)
}

size_t PlayerLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerLogin)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .PlayerLogin.StatStage stat_stage_list = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->stat_stage_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stat_stage_list(static_cast<int>(i)));
    }
  }

  // string lang = 4;
  if (this->lang().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lang());
  }

  // string country = 5;
  if (this->country().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->country());
  }

  // string char_name = 6;
  if (this->char_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->char_name());
  }

  // uint32 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->guid());
  }

  // uint32 screen_width = 2;
  if (this->screen_width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->screen_width());
  }

  // uint32 screen_height = 3;
  if (this->screen_height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->screen_height());
  }

  // uint32 char_id = 7;
  if (this->char_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->char_id());
  }

  // int32 total_kills = 8;
  if (this->total_kills() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_kills());
  }

  // int32 property = 9;
  if (this->property() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->property());
  }

  // uint32 level = 10;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // int32 experience = 11;
  if (this->experience() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->experience());
  }

  // int32 controller_type = 13;
  if (this->controller_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->controller_type());
  }

  // bool trainee = 14;
  if (this->trainee() != 0) {
    total_size += 1 + 1;
  }

  // int32 reward_stage = 15;
  if (this->reward_stage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reward_stage());
  }

  // int32 daily_reward_days = 16;
  if (this->daily_reward_days() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->daily_reward_days());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLogin::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PlayerLogin*>(&from));
}

void PlayerLogin::MergeFrom(const PlayerLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stat_stage_list_.MergeFrom(from.stat_stage_list_);
  if (from.lang().size() > 0) {

    lang_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_);
  }
  if (from.country().size() > 0) {

    country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
  }
  if (from.char_name().size() > 0) {

    char_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.char_name_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.screen_width() != 0) {
    set_screen_width(from.screen_width());
  }
  if (from.screen_height() != 0) {
    set_screen_height(from.screen_height());
  }
  if (from.char_id() != 0) {
    set_char_id(from.char_id());
  }
  if (from.total_kills() != 0) {
    set_total_kills(from.total_kills());
  }
  if (from.property() != 0) {
    set_property(from.property());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.experience() != 0) {
    set_experience(from.experience());
  }
  if (from.controller_type() != 0) {
    set_controller_type(from.controller_type());
  }
  if (from.trainee() != 0) {
    set_trainee(from.trainee());
  }
  if (from.reward_stage() != 0) {
    set_reward_stage(from.reward_stage());
  }
  if (from.daily_reward_days() != 0) {
    set_daily_reward_days(from.daily_reward_days());
  }
}

void PlayerLogin::CopyFrom(const PlayerLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLogin::IsInitialized() const {
  return true;
}

void PlayerLogin::Swap(PlayerLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLogin::InternalSwap(PlayerLogin* other) {
  using std::swap;
  stat_stage_list_.InternalSwap(&other->stat_stage_list_);
  lang_.Swap(&other->lang_);
  country_.Swap(&other->country_);
  char_name_.Swap(&other->char_name_);
  swap(guid_, other->guid_);
  swap(screen_width_, other->screen_width_);
  swap(screen_height_, other->screen_height_);
  swap(char_id_, other->char_id_);
  swap(total_kills_, other->total_kills_);
  swap(property_, other->property_);
  swap(level_, other->level_);
  swap(experience_, other->experience_);
  swap(controller_type_, other->controller_type_);
  swap(trainee_, other->trainee_);
  swap(reward_stage_, other->reward_stage_);
  swap(daily_reward_days_, other->daily_reward_days_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string PlayerLogin::GetTypeName() const {
  return "PlayerLogin";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLogin

// uint32 guid = 1;
void PlayerLogin::clear_guid() {
  guid_ = 0u;
}
::google::protobuf::uint32 PlayerLogin::guid() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.guid)
  return guid_;
}
void PlayerLogin::set_guid(::google::protobuf::uint32 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.guid)
}

// uint32 screen_width = 2;
void PlayerLogin::clear_screen_width() {
  screen_width_ = 0u;
}
::google::protobuf::uint32 PlayerLogin::screen_width() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.screen_width)
  return screen_width_;
}
void PlayerLogin::set_screen_width(::google::protobuf::uint32 value) {
  
  screen_width_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.screen_width)
}

// uint32 screen_height = 3;
void PlayerLogin::clear_screen_height() {
  screen_height_ = 0u;
}
::google::protobuf::uint32 PlayerLogin::screen_height() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.screen_height)
  return screen_height_;
}
void PlayerLogin::set_screen_height(::google::protobuf::uint32 value) {
  
  screen_height_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.screen_height)
}

// string lang = 4;
void PlayerLogin::clear_lang() {
  lang_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLogin::lang() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.lang)
  return lang_.GetNoArena();
}
void PlayerLogin::set_lang(const ::std::string& value) {
  
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlayerLogin.lang)
}
#if LANG_CXX11
void PlayerLogin::set_lang(::std::string&& value) {
  
  lang_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlayerLogin.lang)
}
#endif
void PlayerLogin::set_lang(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlayerLogin.lang)
}
void PlayerLogin::set_lang(const char* value, size_t size) {
  
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlayerLogin.lang)
}
::std::string* PlayerLogin::mutable_lang() {
  
  // @@protoc_insertion_point(field_mutable:PlayerLogin.lang)
  return lang_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLogin::release_lang() {
  // @@protoc_insertion_point(field_release:PlayerLogin.lang)
  
  return lang_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLogin::set_allocated_lang(::std::string* lang) {
  if (lang != NULL) {
    
  } else {
    
  }
  lang_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang);
  // @@protoc_insertion_point(field_set_allocated:PlayerLogin.lang)
}

// string country = 5;
void PlayerLogin::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLogin::country() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.country)
  return country_.GetNoArena();
}
void PlayerLogin::set_country(const ::std::string& value) {
  
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlayerLogin.country)
}
#if LANG_CXX11
void PlayerLogin::set_country(::std::string&& value) {
  
  country_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlayerLogin.country)
}
#endif
void PlayerLogin::set_country(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlayerLogin.country)
}
void PlayerLogin::set_country(const char* value, size_t size) {
  
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlayerLogin.country)
}
::std::string* PlayerLogin::mutable_country() {
  
  // @@protoc_insertion_point(field_mutable:PlayerLogin.country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLogin::release_country() {
  // @@protoc_insertion_point(field_release:PlayerLogin.country)
  
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLogin::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    
  } else {
    
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:PlayerLogin.country)
}

// string char_name = 6;
void PlayerLogin::clear_char_name() {
  char_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerLogin::char_name() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.char_name)
  return char_name_.GetNoArena();
}
void PlayerLogin::set_char_name(const ::std::string& value) {
  
  char_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlayerLogin.char_name)
}
#if LANG_CXX11
void PlayerLogin::set_char_name(::std::string&& value) {
  
  char_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlayerLogin.char_name)
}
#endif
void PlayerLogin::set_char_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  char_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlayerLogin.char_name)
}
void PlayerLogin::set_char_name(const char* value, size_t size) {
  
  char_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlayerLogin.char_name)
}
::std::string* PlayerLogin::mutable_char_name() {
  
  // @@protoc_insertion_point(field_mutable:PlayerLogin.char_name)
  return char_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerLogin::release_char_name() {
  // @@protoc_insertion_point(field_release:PlayerLogin.char_name)
  
  return char_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerLogin::set_allocated_char_name(::std::string* char_name) {
  if (char_name != NULL) {
    
  } else {
    
  }
  char_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), char_name);
  // @@protoc_insertion_point(field_set_allocated:PlayerLogin.char_name)
}

// uint32 char_id = 7;
void PlayerLogin::clear_char_id() {
  char_id_ = 0u;
}
::google::protobuf::uint32 PlayerLogin::char_id() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.char_id)
  return char_id_;
}
void PlayerLogin::set_char_id(::google::protobuf::uint32 value) {
  
  char_id_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.char_id)
}

// int32 total_kills = 8;
void PlayerLogin::clear_total_kills() {
  total_kills_ = 0;
}
::google::protobuf::int32 PlayerLogin::total_kills() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.total_kills)
  return total_kills_;
}
void PlayerLogin::set_total_kills(::google::protobuf::int32 value) {
  
  total_kills_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.total_kills)
}

// int32 property = 9;
void PlayerLogin::clear_property() {
  property_ = 0;
}
::google::protobuf::int32 PlayerLogin::property() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.property)
  return property_;
}
void PlayerLogin::set_property(::google::protobuf::int32 value) {
  
  property_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.property)
}

// uint32 level = 10;
void PlayerLogin::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 PlayerLogin::level() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.level)
  return level_;
}
void PlayerLogin::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.level)
}

// int32 experience = 11;
void PlayerLogin::clear_experience() {
  experience_ = 0;
}
::google::protobuf::int32 PlayerLogin::experience() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.experience)
  return experience_;
}
void PlayerLogin::set_experience(::google::protobuf::int32 value) {
  
  experience_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.experience)
}

// repeated .PlayerLogin.StatStage stat_stage_list = 12;
int PlayerLogin::stat_stage_list_size() const {
  return stat_stage_list_.size();
}
void PlayerLogin::clear_stat_stage_list() {
  stat_stage_list_.Clear();
}
const ::PlayerLogin_StatStage& PlayerLogin::stat_stage_list(int index) const {
  // @@protoc_insertion_point(field_get:PlayerLogin.stat_stage_list)
  return stat_stage_list_.Get(index);
}
::PlayerLogin_StatStage* PlayerLogin::mutable_stat_stage_list(int index) {
  // @@protoc_insertion_point(field_mutable:PlayerLogin.stat_stage_list)
  return stat_stage_list_.Mutable(index);
}
::PlayerLogin_StatStage* PlayerLogin::add_stat_stage_list() {
  // @@protoc_insertion_point(field_add:PlayerLogin.stat_stage_list)
  return stat_stage_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::PlayerLogin_StatStage >*
PlayerLogin::mutable_stat_stage_list() {
  // @@protoc_insertion_point(field_mutable_list:PlayerLogin.stat_stage_list)
  return &stat_stage_list_;
}
const ::google::protobuf::RepeatedPtrField< ::PlayerLogin_StatStage >&
PlayerLogin::stat_stage_list() const {
  // @@protoc_insertion_point(field_list:PlayerLogin.stat_stage_list)
  return stat_stage_list_;
}

// int32 controller_type = 13;
void PlayerLogin::clear_controller_type() {
  controller_type_ = 0;
}
::google::protobuf::int32 PlayerLogin::controller_type() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.controller_type)
  return controller_type_;
}
void PlayerLogin::set_controller_type(::google::protobuf::int32 value) {
  
  controller_type_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.controller_type)
}

// bool trainee = 14;
void PlayerLogin::clear_trainee() {
  trainee_ = false;
}
bool PlayerLogin::trainee() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.trainee)
  return trainee_;
}
void PlayerLogin::set_trainee(bool value) {
  
  trainee_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.trainee)
}

// int32 reward_stage = 15;
void PlayerLogin::clear_reward_stage() {
  reward_stage_ = 0;
}
::google::protobuf::int32 PlayerLogin::reward_stage() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.reward_stage)
  return reward_stage_;
}
void PlayerLogin::set_reward_stage(::google::protobuf::int32 value) {
  
  reward_stage_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.reward_stage)
}

// int32 daily_reward_days = 16;
void PlayerLogin::clear_daily_reward_days() {
  daily_reward_days_ = 0;
}
::google::protobuf::int32 PlayerLogin::daily_reward_days() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.daily_reward_days)
  return daily_reward_days_;
}
void PlayerLogin::set_daily_reward_days(::google::protobuf::int32 value) {
  
  daily_reward_days_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.daily_reward_days)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
