// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DeathMessage.proto

#ifndef PROTOBUF_DeathMessage_2eproto__INCLUDED
#define PROTOBUF_DeathMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
class DeathMessage;
class DeathMessageDefaultTypeInternal;
extern DeathMessageDefaultTypeInternal _DeathMessage_default_instance_;
class DeathMessage_Unit;
class DeathMessage_UnitDefaultTypeInternal;
extern DeathMessage_UnitDefaultTypeInternal _DeathMessage_Unit_default_instance_;

namespace protobuf_DeathMessage_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_DeathMessage_2eproto

// ===================================================================

class DeathMessage_Unit : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:DeathMessage.Unit) */ {
 public:
  DeathMessage_Unit();
  virtual ~DeathMessage_Unit();

  DeathMessage_Unit(const DeathMessage_Unit& from);

  inline DeathMessage_Unit& operator=(const DeathMessage_Unit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeathMessage_Unit(DeathMessage_Unit&& from) noexcept
    : DeathMessage_Unit() {
    *this = ::std::move(from);
  }

  inline DeathMessage_Unit& operator=(DeathMessage_Unit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const DeathMessage_Unit& default_instance();

  static inline const DeathMessage_Unit* internal_default_instance() {
    return reinterpret_cast<const DeathMessage_Unit*>(
               &_DeathMessage_Unit_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(DeathMessage_Unit* other);
  friend void swap(DeathMessage_Unit& a, DeathMessage_Unit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeathMessage_Unit* New() const PROTOBUF_FINAL { return New(NULL); }

  DeathMessage_Unit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DeathMessage_Unit& from);
  void MergeFrom(const DeathMessage_Unit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeathMessage_Unit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint32 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint32 guid() const;
  void set_guid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DeathMessage.Unit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 guid_;
  mutable int _cached_size_;
  friend struct protobuf_DeathMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeathMessage : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:DeathMessage) */ {
 public:
  DeathMessage();
  virtual ~DeathMessage();

  DeathMessage(const DeathMessage& from);

  inline DeathMessage& operator=(const DeathMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeathMessage(DeathMessage&& from) noexcept
    : DeathMessage() {
    *this = ::std::move(from);
  }

  inline DeathMessage& operator=(DeathMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const DeathMessage& default_instance();

  static inline const DeathMessage* internal_default_instance() {
    return reinterpret_cast<const DeathMessage*>(
               &_DeathMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(DeathMessage* other);
  friend void swap(DeathMessage& a, DeathMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeathMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  DeathMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DeathMessage& from);
  void MergeFrom(const DeathMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeathMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DeathMessage_Unit Unit;

  // accessors -------------------------------------------------------

  // .DeathMessage.Unit killer = 2;
  bool has_killer() const;
  void clear_killer();
  static const int kKillerFieldNumber = 2;
  const ::DeathMessage_Unit& killer() const;
  ::DeathMessage_Unit* mutable_killer();
  ::DeathMessage_Unit* release_killer();
  void set_allocated_killer(::DeathMessage_Unit* killer);

  // .DeathMessage.Unit victim = 3;
  bool has_victim() const;
  void clear_victim();
  static const int kVictimFieldNumber = 3;
  const ::DeathMessage_Unit& victim() const;
  ::DeathMessage_Unit* mutable_victim();
  ::DeathMessage_Unit* release_victim();
  void set_allocated_victim(::DeathMessage_Unit* victim);

  // int32 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DeathMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::DeathMessage_Unit* killer_;
  ::DeathMessage_Unit* victim_;
  ::google::protobuf::int32 time_;
  mutable int _cached_size_;
  friend struct protobuf_DeathMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DeathMessage_Unit

// uint32 guid = 1;
inline void DeathMessage_Unit::clear_guid() {
  guid_ = 0u;
}
inline ::google::protobuf::uint32 DeathMessage_Unit::guid() const {
  // @@protoc_insertion_point(field_get:DeathMessage.Unit.guid)
  return guid_;
}
inline void DeathMessage_Unit::set_guid(::google::protobuf::uint32 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:DeathMessage.Unit.guid)
}

// string name = 2;
inline void DeathMessage_Unit::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeathMessage_Unit::name() const {
  // @@protoc_insertion_point(field_get:DeathMessage.Unit.name)
  return name_.GetNoArena();
}
inline void DeathMessage_Unit::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeathMessage.Unit.name)
}
#if LANG_CXX11
inline void DeathMessage_Unit::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DeathMessage.Unit.name)
}
#endif
inline void DeathMessage_Unit::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeathMessage.Unit.name)
}
inline void DeathMessage_Unit::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeathMessage.Unit.name)
}
inline ::std::string* DeathMessage_Unit::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:DeathMessage.Unit.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeathMessage_Unit::release_name() {
  // @@protoc_insertion_point(field_release:DeathMessage.Unit.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeathMessage_Unit::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:DeathMessage.Unit.name)
}

// -------------------------------------------------------------------

// DeathMessage

// int32 time = 1;
inline void DeathMessage::clear_time() {
  time_ = 0;
}
inline ::google::protobuf::int32 DeathMessage::time() const {
  // @@protoc_insertion_point(field_get:DeathMessage.time)
  return time_;
}
inline void DeathMessage::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:DeathMessage.time)
}

// .DeathMessage.Unit killer = 2;
inline bool DeathMessage::has_killer() const {
  return this != internal_default_instance() && killer_ != NULL;
}
inline void DeathMessage::clear_killer() {
  if (GetArenaNoVirtual() == NULL && killer_ != NULL) delete killer_;
  killer_ = NULL;
}
inline const ::DeathMessage_Unit& DeathMessage::killer() const {
  const ::DeathMessage_Unit* p = killer_;
  // @@protoc_insertion_point(field_get:DeathMessage.killer)
  return p != NULL ? *p : *reinterpret_cast<const ::DeathMessage_Unit*>(
      &::_DeathMessage_Unit_default_instance_);
}
inline ::DeathMessage_Unit* DeathMessage::mutable_killer() {
  
  if (killer_ == NULL) {
    killer_ = new ::DeathMessage_Unit;
  }
  // @@protoc_insertion_point(field_mutable:DeathMessage.killer)
  return killer_;
}
inline ::DeathMessage_Unit* DeathMessage::release_killer() {
  // @@protoc_insertion_point(field_release:DeathMessage.killer)
  
  ::DeathMessage_Unit* temp = killer_;
  killer_ = NULL;
  return temp;
}
inline void DeathMessage::set_allocated_killer(::DeathMessage_Unit* killer) {
  delete killer_;
  killer_ = killer;
  if (killer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DeathMessage.killer)
}

// .DeathMessage.Unit victim = 3;
inline bool DeathMessage::has_victim() const {
  return this != internal_default_instance() && victim_ != NULL;
}
inline void DeathMessage::clear_victim() {
  if (GetArenaNoVirtual() == NULL && victim_ != NULL) delete victim_;
  victim_ = NULL;
}
inline const ::DeathMessage_Unit& DeathMessage::victim() const {
  const ::DeathMessage_Unit* p = victim_;
  // @@protoc_insertion_point(field_get:DeathMessage.victim)
  return p != NULL ? *p : *reinterpret_cast<const ::DeathMessage_Unit*>(
      &::_DeathMessage_Unit_default_instance_);
}
inline ::DeathMessage_Unit* DeathMessage::mutable_victim() {
  
  if (victim_ == NULL) {
    victim_ = new ::DeathMessage_Unit;
  }
  // @@protoc_insertion_point(field_mutable:DeathMessage.victim)
  return victim_;
}
inline ::DeathMessage_Unit* DeathMessage::release_victim() {
  // @@protoc_insertion_point(field_release:DeathMessage.victim)
  
  ::DeathMessage_Unit* temp = victim_;
  victim_ = NULL;
  return temp;
}
inline void DeathMessage::set_allocated_victim(::DeathMessage_Unit* victim) {
  delete victim_;
  victim_ = victim;
  if (victim) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DeathMessage.victim)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DeathMessage_2eproto__INCLUDED
