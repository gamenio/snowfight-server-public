// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlayerActionMessage.proto

#ifndef PROTOBUF_PlayerActionMessage_2eproto__INCLUDED
#define PROTOBUF_PlayerActionMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)
class PlayerActionMessage;
class PlayerActionMessageDefaultTypeInternal;
extern PlayerActionMessageDefaultTypeInternal _PlayerActionMessage_default_instance_;

namespace protobuf_PlayerActionMessage_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_PlayerActionMessage_2eproto

enum PlayerActionMessage_ActionType {
  PlayerActionMessage_ActionType_PLAYER_LOGGED_IN = 0,
  PlayerActionMessage_ActionType_PlayerActionMessage_ActionType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerActionMessage_ActionType_PlayerActionMessage_ActionType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerActionMessage_ActionType_IsValid(int value);
const PlayerActionMessage_ActionType PlayerActionMessage_ActionType_ActionType_MIN = PlayerActionMessage_ActionType_PLAYER_LOGGED_IN;
const PlayerActionMessage_ActionType PlayerActionMessage_ActionType_ActionType_MAX = PlayerActionMessage_ActionType_PLAYER_LOGGED_IN;
const int PlayerActionMessage_ActionType_ActionType_ARRAYSIZE = PlayerActionMessage_ActionType_ActionType_MAX + 1;

// ===================================================================

class PlayerActionMessage : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PlayerActionMessage) */ {
 public:
  PlayerActionMessage();
  virtual ~PlayerActionMessage();

  PlayerActionMessage(const PlayerActionMessage& from);

  inline PlayerActionMessage& operator=(const PlayerActionMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerActionMessage(PlayerActionMessage&& from) noexcept
    : PlayerActionMessage() {
    *this = ::std::move(from);
  }

  inline PlayerActionMessage& operator=(PlayerActionMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const PlayerActionMessage& default_instance();

  static inline const PlayerActionMessage* internal_default_instance() {
    return reinterpret_cast<const PlayerActionMessage*>(
               &_PlayerActionMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PlayerActionMessage* other);
  friend void swap(PlayerActionMessage& a, PlayerActionMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerActionMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerActionMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const PlayerActionMessage& from);
  void MergeFrom(const PlayerActionMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PlayerActionMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerActionMessage_ActionType ActionType;
  static const ActionType PLAYER_LOGGED_IN =
    PlayerActionMessage_ActionType_PLAYER_LOGGED_IN;
  static inline bool ActionType_IsValid(int value) {
    return PlayerActionMessage_ActionType_IsValid(value);
  }
  static const ActionType ActionType_MIN =
    PlayerActionMessage_ActionType_ActionType_MIN;
  static const ActionType ActionType_MAX =
    PlayerActionMessage_ActionType_ActionType_MAX;
  static const int ActionType_ARRAYSIZE =
    PlayerActionMessage_ActionType_ActionType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .PlayerActionMessage.ActionType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::PlayerActionMessage_ActionType type() const;
  void set_type(::PlayerActionMessage_ActionType value);

  // @@protoc_insertion_point(class_scope:PlayerActionMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int type_;
  mutable int _cached_size_;
  friend struct protobuf_PlayerActionMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PlayerActionMessage

// .PlayerActionMessage.ActionType type = 1;
inline void PlayerActionMessage::clear_type() {
  type_ = 0;
}
inline ::PlayerActionMessage_ActionType PlayerActionMessage::type() const {
  // @@protoc_insertion_point(field_get:PlayerActionMessage.type)
  return static_cast< ::PlayerActionMessage_ActionType >(type_);
}
inline void PlayerActionMessage::set_type(::PlayerActionMessage_ActionType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:PlayerActionMessage.type)
}

// string name = 2;
inline void PlayerActionMessage::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerActionMessage::name() const {
  // @@protoc_insertion_point(field_get:PlayerActionMessage.name)
  return name_.GetNoArena();
}
inline void PlayerActionMessage::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlayerActionMessage.name)
}
#if LANG_CXX11
inline void PlayerActionMessage::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlayerActionMessage.name)
}
#endif
inline void PlayerActionMessage::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlayerActionMessage.name)
}
inline void PlayerActionMessage::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlayerActionMessage.name)
}
inline ::std::string* PlayerActionMessage::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:PlayerActionMessage.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerActionMessage::release_name() {
  // @@protoc_insertion_point(field_release:PlayerActionMessage.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerActionMessage::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:PlayerActionMessage.name)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::PlayerActionMessage_ActionType> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PlayerActionMessage_2eproto__INCLUDED
