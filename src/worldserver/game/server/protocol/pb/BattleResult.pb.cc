// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BattleResult.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BattleResult.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
class BattleResultDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BattleResult>
     _instance;
} _BattleResult_default_instance_;

namespace protobuf_BattleResult_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _BattleResult_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BattleResult_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_BattleResult_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BattleResult::kOutcomeFieldNumber;
const int BattleResult::kKillCountFieldNumber;
const int BattleResult::kRankNoFieldNumber;
const int BattleResult::kMoneyFieldNumber;
const int BattleResult::kLevelFieldNumber;
const int BattleResult::kExperienceFieldNumber;
const int BattleResult::kExtraMoneyFieldNumber;
const int BattleResult::kExtraXpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BattleResult::BattleResult()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BattleResult_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BattleResult)
}
BattleResult::BattleResult(const BattleResult& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&outcome_, &from.outcome_,
    static_cast<size_t>(reinterpret_cast<char*>(&extra_xp_) -
    reinterpret_cast<char*>(&outcome_)) + sizeof(extra_xp_));
  // @@protoc_insertion_point(copy_constructor:BattleResult)
}

void BattleResult::SharedCtor() {
  ::memset(&outcome_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&extra_xp_) -
      reinterpret_cast<char*>(&outcome_)) + sizeof(extra_xp_));
  _cached_size_ = 0;
}

BattleResult::~BattleResult() {
  // @@protoc_insertion_point(destructor:BattleResult)
  SharedDtor();
}

void BattleResult::SharedDtor() {
}

void BattleResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const BattleResult& BattleResult::default_instance() {
  protobuf_BattleResult_2eproto::InitDefaults();
  return *internal_default_instance();
}

BattleResult* BattleResult::New(::google::protobuf::Arena* arena) const {
  BattleResult* n = new BattleResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BattleResult::Clear() {
// @@protoc_insertion_point(message_clear_start:BattleResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&outcome_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&extra_xp_) -
      reinterpret_cast<char*>(&outcome_)) + sizeof(extra_xp_));
  _internal_metadata_.Clear();
}

bool BattleResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:BattleResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 outcome = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &outcome_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 kill_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kill_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rank_no = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_no_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 money = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 experience = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &experience_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 extra_money = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &extra_money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 extra_xp = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &extra_xp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BattleResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BattleResult)
  return false;
#undef DO_
}

void BattleResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BattleResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 outcome = 1;
  if (this->outcome() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->outcome(), output);
  }

  // int32 kill_count = 2;
  if (this->kill_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->kill_count(), output);
  }

  // int32 rank_no = 3;
  if (this->rank_no() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rank_no(), output);
  }

  // int32 money = 4;
  if (this->money() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->money(), output);
  }

  // uint32 level = 5;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->level(), output);
  }

  // int32 experience = 6;
  if (this->experience() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->experience(), output);
  }

  // int32 extra_money = 7;
  if (this->extra_money() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->extra_money(), output);
  }

  // int32 extra_xp = 8;
  if (this->extra_xp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->extra_xp(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:BattleResult)
}

size_t BattleResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BattleResult)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 outcome = 1;
  if (this->outcome() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->outcome());
  }

  // int32 kill_count = 2;
  if (this->kill_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->kill_count());
  }

  // int32 rank_no = 3;
  if (this->rank_no() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rank_no());
  }

  // int32 money = 4;
  if (this->money() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->money());
  }

  // uint32 level = 5;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // int32 experience = 6;
  if (this->experience() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->experience());
  }

  // int32 extra_money = 7;
  if (this->extra_money() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->extra_money());
  }

  // int32 extra_xp = 8;
  if (this->extra_xp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->extra_xp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BattleResult::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BattleResult*>(&from));
}

void BattleResult::MergeFrom(const BattleResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BattleResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.outcome() != 0) {
    set_outcome(from.outcome());
  }
  if (from.kill_count() != 0) {
    set_kill_count(from.kill_count());
  }
  if (from.rank_no() != 0) {
    set_rank_no(from.rank_no());
  }
  if (from.money() != 0) {
    set_money(from.money());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.experience() != 0) {
    set_experience(from.experience());
  }
  if (from.extra_money() != 0) {
    set_extra_money(from.extra_money());
  }
  if (from.extra_xp() != 0) {
    set_extra_xp(from.extra_xp());
  }
}

void BattleResult::CopyFrom(const BattleResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BattleResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleResult::IsInitialized() const {
  return true;
}

void BattleResult::Swap(BattleResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BattleResult::InternalSwap(BattleResult* other) {
  using std::swap;
  swap(outcome_, other->outcome_);
  swap(kill_count_, other->kill_count_);
  swap(rank_no_, other->rank_no_);
  swap(money_, other->money_);
  swap(level_, other->level_);
  swap(experience_, other->experience_);
  swap(extra_money_, other->extra_money_);
  swap(extra_xp_, other->extra_xp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string BattleResult::GetTypeName() const {
  return "BattleResult";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BattleResult

// uint32 outcome = 1;
void BattleResult::clear_outcome() {
  outcome_ = 0u;
}
::google::protobuf::uint32 BattleResult::outcome() const {
  // @@protoc_insertion_point(field_get:BattleResult.outcome)
  return outcome_;
}
void BattleResult::set_outcome(::google::protobuf::uint32 value) {
  
  outcome_ = value;
  // @@protoc_insertion_point(field_set:BattleResult.outcome)
}

// int32 kill_count = 2;
void BattleResult::clear_kill_count() {
  kill_count_ = 0;
}
::google::protobuf::int32 BattleResult::kill_count() const {
  // @@protoc_insertion_point(field_get:BattleResult.kill_count)
  return kill_count_;
}
void BattleResult::set_kill_count(::google::protobuf::int32 value) {
  
  kill_count_ = value;
  // @@protoc_insertion_point(field_set:BattleResult.kill_count)
}

// int32 rank_no = 3;
void BattleResult::clear_rank_no() {
  rank_no_ = 0;
}
::google::protobuf::int32 BattleResult::rank_no() const {
  // @@protoc_insertion_point(field_get:BattleResult.rank_no)
  return rank_no_;
}
void BattleResult::set_rank_no(::google::protobuf::int32 value) {
  
  rank_no_ = value;
  // @@protoc_insertion_point(field_set:BattleResult.rank_no)
}

// int32 money = 4;
void BattleResult::clear_money() {
  money_ = 0;
}
::google::protobuf::int32 BattleResult::money() const {
  // @@protoc_insertion_point(field_get:BattleResult.money)
  return money_;
}
void BattleResult::set_money(::google::protobuf::int32 value) {
  
  money_ = value;
  // @@protoc_insertion_point(field_set:BattleResult.money)
}

// uint32 level = 5;
void BattleResult::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 BattleResult::level() const {
  // @@protoc_insertion_point(field_get:BattleResult.level)
  return level_;
}
void BattleResult::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:BattleResult.level)
}

// int32 experience = 6;
void BattleResult::clear_experience() {
  experience_ = 0;
}
::google::protobuf::int32 BattleResult::experience() const {
  // @@protoc_insertion_point(field_get:BattleResult.experience)
  return experience_;
}
void BattleResult::set_experience(::google::protobuf::int32 value) {
  
  experience_ = value;
  // @@protoc_insertion_point(field_set:BattleResult.experience)
}

// int32 extra_money = 7;
void BattleResult::clear_extra_money() {
  extra_money_ = 0;
}
::google::protobuf::int32 BattleResult::extra_money() const {
  // @@protoc_insertion_point(field_get:BattleResult.extra_money)
  return extra_money_;
}
void BattleResult::set_extra_money(::google::protobuf::int32 value) {
  
  extra_money_ = value;
  // @@protoc_insertion_point(field_set:BattleResult.extra_money)
}

// int32 extra_xp = 8;
void BattleResult::clear_extra_xp() {
  extra_xp_ = 0;
}
::google::protobuf::int32 BattleResult::extra_xp() const {
  // @@protoc_insertion_point(field_get:BattleResult.extra_xp)
  return extra_xp_;
}
void BattleResult::set_extra_xp(::google::protobuf::int32 value) {
  
  extra_xp_ = value;
  // @@protoc_insertion_point(field_set:BattleResult.extra_xp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
