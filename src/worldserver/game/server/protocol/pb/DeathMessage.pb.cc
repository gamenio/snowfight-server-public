// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DeathMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "DeathMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
class DeathMessage_UnitDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeathMessage_Unit>
     _instance;
} _DeathMessage_Unit_default_instance_;
class DeathMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeathMessage>
     _instance;
} _DeathMessage_default_instance_;

namespace protobuf_DeathMessage_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _DeathMessage_Unit_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeathMessage_Unit_default_instance_);_DeathMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeathMessage_default_instance_);_DeathMessage_default_instance_._instance.get_mutable()->killer_ = const_cast< ::DeathMessage_Unit*>(
      ::DeathMessage_Unit::internal_default_instance());
  _DeathMessage_default_instance_._instance.get_mutable()->victim_ = const_cast< ::DeathMessage_Unit*>(
      ::DeathMessage_Unit::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_DeathMessage_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeathMessage_Unit::kGuidFieldNumber;
const int DeathMessage_Unit::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeathMessage_Unit::DeathMessage_Unit()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DeathMessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeathMessage.Unit)
}
DeathMessage_Unit::DeathMessage_Unit(const DeathMessage_Unit& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  guid_ = from.guid_;
  // @@protoc_insertion_point(copy_constructor:DeathMessage.Unit)
}

void DeathMessage_Unit::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_ = 0u;
  _cached_size_ = 0;
}

DeathMessage_Unit::~DeathMessage_Unit() {
  // @@protoc_insertion_point(destructor:DeathMessage.Unit)
  SharedDtor();
}

void DeathMessage_Unit::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeathMessage_Unit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DeathMessage_Unit& DeathMessage_Unit::default_instance() {
  protobuf_DeathMessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeathMessage_Unit* DeathMessage_Unit::New(::google::protobuf::Arena* arena) const {
  DeathMessage_Unit* n = new DeathMessage_Unit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeathMessage_Unit::Clear() {
// @@protoc_insertion_point(message_clear_start:DeathMessage.Unit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_ = 0u;
  _internal_metadata_.Clear();
}

bool DeathMessage_Unit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:DeathMessage.Unit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DeathMessage.Unit.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeathMessage.Unit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeathMessage.Unit)
  return false;
#undef DO_
}

void DeathMessage_Unit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeathMessage.Unit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 guid = 1;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->guid(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DeathMessage.Unit.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:DeathMessage.Unit)
}

size_t DeathMessage_Unit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeathMessage.Unit)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 guid = 1;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeathMessage_Unit::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DeathMessage_Unit*>(&from));
}

void DeathMessage_Unit::MergeFrom(const DeathMessage_Unit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeathMessage.Unit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
}

void DeathMessage_Unit::CopyFrom(const DeathMessage_Unit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeathMessage.Unit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeathMessage_Unit::IsInitialized() const {
  return true;
}

void DeathMessage_Unit::Swap(DeathMessage_Unit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeathMessage_Unit::InternalSwap(DeathMessage_Unit* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(guid_, other->guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string DeathMessage_Unit::GetTypeName() const {
  return "DeathMessage.Unit";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeathMessage_Unit

// uint32 guid = 1;
void DeathMessage_Unit::clear_guid() {
  guid_ = 0u;
}
::google::protobuf::uint32 DeathMessage_Unit::guid() const {
  // @@protoc_insertion_point(field_get:DeathMessage.Unit.guid)
  return guid_;
}
void DeathMessage_Unit::set_guid(::google::protobuf::uint32 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:DeathMessage.Unit.guid)
}

// string name = 2;
void DeathMessage_Unit::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeathMessage_Unit::name() const {
  // @@protoc_insertion_point(field_get:DeathMessage.Unit.name)
  return name_.GetNoArena();
}
void DeathMessage_Unit::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DeathMessage.Unit.name)
}
#if LANG_CXX11
void DeathMessage_Unit::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DeathMessage.Unit.name)
}
#endif
void DeathMessage_Unit::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DeathMessage.Unit.name)
}
void DeathMessage_Unit::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DeathMessage.Unit.name)
}
::std::string* DeathMessage_Unit::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:DeathMessage.Unit.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeathMessage_Unit::release_name() {
  // @@protoc_insertion_point(field_release:DeathMessage.Unit.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeathMessage_Unit::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:DeathMessage.Unit.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeathMessage::kTimeFieldNumber;
const int DeathMessage::kKillerFieldNumber;
const int DeathMessage::kVictimFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeathMessage::DeathMessage()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DeathMessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeathMessage)
}
DeathMessage::DeathMessage(const DeathMessage& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_killer()) {
    killer_ = new ::DeathMessage_Unit(*from.killer_);
  } else {
    killer_ = NULL;
  }
  if (from.has_victim()) {
    victim_ = new ::DeathMessage_Unit(*from.victim_);
  } else {
    victim_ = NULL;
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:DeathMessage)
}

void DeathMessage::SharedCtor() {
  ::memset(&killer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&killer_)) + sizeof(time_));
  _cached_size_ = 0;
}

DeathMessage::~DeathMessage() {
  // @@protoc_insertion_point(destructor:DeathMessage)
  SharedDtor();
}

void DeathMessage::SharedDtor() {
  if (this != internal_default_instance()) delete killer_;
  if (this != internal_default_instance()) delete victim_;
}

void DeathMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DeathMessage& DeathMessage::default_instance() {
  protobuf_DeathMessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeathMessage* DeathMessage::New(::google::protobuf::Arena* arena) const {
  DeathMessage* n = new DeathMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeathMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:DeathMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && killer_ != NULL) {
    delete killer_;
  }
  killer_ = NULL;
  if (GetArenaNoVirtual() == NULL && victim_ != NULL) {
    delete victim_;
  }
  victim_ = NULL;
  time_ = 0;
  _internal_metadata_.Clear();
}

bool DeathMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:DeathMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DeathMessage.Unit killer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_killer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .DeathMessage.Unit victim = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_victim()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeathMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeathMessage)
  return false;
#undef DO_
}

void DeathMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeathMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->time(), output);
  }

  // .DeathMessage.Unit killer = 2;
  if (this->has_killer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->killer_, output);
  }

  // .DeathMessage.Unit victim = 3;
  if (this->has_victim()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, *this->victim_, output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:DeathMessage)
}

size_t DeathMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeathMessage)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .DeathMessage.Unit killer = 2;
  if (this->has_killer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->killer_);
  }

  // .DeathMessage.Unit victim = 3;
  if (this->has_victim()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->victim_);
  }

  // int32 time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeathMessage::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DeathMessage*>(&from));
}

void DeathMessage::MergeFrom(const DeathMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeathMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_killer()) {
    mutable_killer()->::DeathMessage_Unit::MergeFrom(from.killer());
  }
  if (from.has_victim()) {
    mutable_victim()->::DeathMessage_Unit::MergeFrom(from.victim());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void DeathMessage::CopyFrom(const DeathMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeathMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeathMessage::IsInitialized() const {
  return true;
}

void DeathMessage::Swap(DeathMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeathMessage::InternalSwap(DeathMessage* other) {
  using std::swap;
  swap(killer_, other->killer_);
  swap(victim_, other->victim_);
  swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string DeathMessage::GetTypeName() const {
  return "DeathMessage";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeathMessage

// int32 time = 1;
void DeathMessage::clear_time() {
  time_ = 0;
}
::google::protobuf::int32 DeathMessage::time() const {
  // @@protoc_insertion_point(field_get:DeathMessage.time)
  return time_;
}
void DeathMessage::set_time(::google::protobuf::int32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:DeathMessage.time)
}

// .DeathMessage.Unit killer = 2;
bool DeathMessage::has_killer() const {
  return this != internal_default_instance() && killer_ != NULL;
}
void DeathMessage::clear_killer() {
  if (GetArenaNoVirtual() == NULL && killer_ != NULL) delete killer_;
  killer_ = NULL;
}
const ::DeathMessage_Unit& DeathMessage::killer() const {
  const ::DeathMessage_Unit* p = killer_;
  // @@protoc_insertion_point(field_get:DeathMessage.killer)
  return p != NULL ? *p : *reinterpret_cast<const ::DeathMessage_Unit*>(
      &::_DeathMessage_Unit_default_instance_);
}
::DeathMessage_Unit* DeathMessage::mutable_killer() {
  
  if (killer_ == NULL) {
    killer_ = new ::DeathMessage_Unit;
  }
  // @@protoc_insertion_point(field_mutable:DeathMessage.killer)
  return killer_;
}
::DeathMessage_Unit* DeathMessage::release_killer() {
  // @@protoc_insertion_point(field_release:DeathMessage.killer)
  
  ::DeathMessage_Unit* temp = killer_;
  killer_ = NULL;
  return temp;
}
void DeathMessage::set_allocated_killer(::DeathMessage_Unit* killer) {
  delete killer_;
  killer_ = killer;
  if (killer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DeathMessage.killer)
}

// .DeathMessage.Unit victim = 3;
bool DeathMessage::has_victim() const {
  return this != internal_default_instance() && victim_ != NULL;
}
void DeathMessage::clear_victim() {
  if (GetArenaNoVirtual() == NULL && victim_ != NULL) delete victim_;
  victim_ = NULL;
}
const ::DeathMessage_Unit& DeathMessage::victim() const {
  const ::DeathMessage_Unit* p = victim_;
  // @@protoc_insertion_point(field_get:DeathMessage.victim)
  return p != NULL ? *p : *reinterpret_cast<const ::DeathMessage_Unit*>(
      &::_DeathMessage_Unit_default_instance_);
}
::DeathMessage_Unit* DeathMessage::mutable_victim() {
  
  if (victim_ == NULL) {
    victim_ = new ::DeathMessage_Unit;
  }
  // @@protoc_insertion_point(field_mutable:DeathMessage.victim)
  return victim_;
}
::DeathMessage_Unit* DeathMessage::release_victim() {
  // @@protoc_insertion_point(field_release:DeathMessage.victim)
  
  ::DeathMessage_Unit* temp = victim_;
  victim_ = NULL;
  return temp;
}
void DeathMessage::set_allocated_victim(::DeathMessage_Unit* victim) {
  delete victim_;
  victim_ = victim;
  if (victim) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:DeathMessage.victim)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
