// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RewardMessage.proto

#ifndef PROTOBUF_RewardMessage_2eproto__INCLUDED
#define PROTOBUF_RewardMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)
class RewardMessage;
class RewardMessageDefaultTypeInternal;
extern RewardMessageDefaultTypeInternal _RewardMessage_default_instance_;

namespace protobuf_RewardMessage_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_RewardMessage_2eproto

enum RewardMessage_RewardType {
  RewardMessage_RewardType_REWARD_XP = 0,
  RewardMessage_RewardType_REWARD_MONEY = 1,
  RewardMessage_RewardType_RewardMessage_RewardType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RewardMessage_RewardType_RewardMessage_RewardType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RewardMessage_RewardType_IsValid(int value);
const RewardMessage_RewardType RewardMessage_RewardType_RewardType_MIN = RewardMessage_RewardType_REWARD_XP;
const RewardMessage_RewardType RewardMessage_RewardType_RewardType_MAX = RewardMessage_RewardType_REWARD_MONEY;
const int RewardMessage_RewardType_RewardType_ARRAYSIZE = RewardMessage_RewardType_RewardType_MAX + 1;

// ===================================================================

class RewardMessage : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:RewardMessage) */ {
 public:
  RewardMessage();
  virtual ~RewardMessage();

  RewardMessage(const RewardMessage& from);

  inline RewardMessage& operator=(const RewardMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RewardMessage(RewardMessage&& from) noexcept
    : RewardMessage() {
    *this = ::std::move(from);
  }

  inline RewardMessage& operator=(RewardMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const RewardMessage& default_instance();

  static inline const RewardMessage* internal_default_instance() {
    return reinterpret_cast<const RewardMessage*>(
               &_RewardMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RewardMessage* other);
  friend void swap(RewardMessage& a, RewardMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RewardMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  RewardMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RewardMessage& from);
  void MergeFrom(const RewardMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RewardMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RewardMessage_RewardType RewardType;
  static const RewardType REWARD_XP =
    RewardMessage_RewardType_REWARD_XP;
  static const RewardType REWARD_MONEY =
    RewardMessage_RewardType_REWARD_MONEY;
  static inline bool RewardType_IsValid(int value) {
    return RewardMessage_RewardType_IsValid(value);
  }
  static const RewardType RewardType_MIN =
    RewardMessage_RewardType_RewardType_MIN;
  static const RewardType RewardType_MAX =
    RewardMessage_RewardType_RewardType_MAX;
  static const int RewardType_ARRAYSIZE =
    RewardMessage_RewardType_RewardType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // .RewardMessage.RewardType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::RewardMessage_RewardType type() const;
  void set_type(::RewardMessage_RewardType value);

  // int32 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RewardMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  int type_;
  ::google::protobuf::int32 value_;
  mutable int _cached_size_;
  friend struct protobuf_RewardMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RewardMessage

// .RewardMessage.RewardType type = 1;
inline void RewardMessage::clear_type() {
  type_ = 0;
}
inline ::RewardMessage_RewardType RewardMessage::type() const {
  // @@protoc_insertion_point(field_get:RewardMessage.type)
  return static_cast< ::RewardMessage_RewardType >(type_);
}
inline void RewardMessage::set_type(::RewardMessage_RewardType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:RewardMessage.type)
}

// int32 value = 2;
inline void RewardMessage::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 RewardMessage::value() const {
  // @@protoc_insertion_point(field_get:RewardMessage.value)
  return value_;
}
inline void RewardMessage::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:RewardMessage.value)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::RewardMessage_RewardType> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RewardMessage_2eproto__INCLUDED
