// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ItemCooldownList.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ItemCooldownList.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
class ItemCooldownInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ItemCooldownInfo>
     _instance;
} _ItemCooldownInfo_default_instance_;
class ItemCooldownListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ItemCooldownList>
     _instance;
} _ItemCooldownList_default_instance_;

namespace protobuf_ItemCooldownList_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ItemCooldownInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ItemCooldownInfo_default_instance_);_ItemCooldownList_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ItemCooldownList_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_ItemCooldownList_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemCooldownInfo::kItemIdFieldNumber;
const int ItemCooldownInfo::kDurationFieldNumber;
const int ItemCooldownInfo::kRemainingTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemCooldownInfo::ItemCooldownInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ItemCooldownList_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ItemCooldownInfo)
}
ItemCooldownInfo::ItemCooldownInfo(const ItemCooldownInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&remaining_time_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(remaining_time_));
  // @@protoc_insertion_point(copy_constructor:ItemCooldownInfo)
}

void ItemCooldownInfo::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remaining_time_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(remaining_time_));
  _cached_size_ = 0;
}

ItemCooldownInfo::~ItemCooldownInfo() {
  // @@protoc_insertion_point(destructor:ItemCooldownInfo)
  SharedDtor();
}

void ItemCooldownInfo::SharedDtor() {
}

void ItemCooldownInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ItemCooldownInfo& ItemCooldownInfo::default_instance() {
  protobuf_ItemCooldownList_2eproto::InitDefaults();
  return *internal_default_instance();
}

ItemCooldownInfo* ItemCooldownInfo::New(::google::protobuf::Arena* arena) const {
  ItemCooldownInfo* n = new ItemCooldownInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemCooldownInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ItemCooldownInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remaining_time_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(remaining_time_));
  _internal_metadata_.Clear();
}

bool ItemCooldownInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:ItemCooldownInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 duration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 remaining_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &remaining_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ItemCooldownInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ItemCooldownInfo)
  return false;
#undef DO_
}

void ItemCooldownInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ItemCooldownInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_id(), output);
  }

  // int32 duration = 2;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->duration(), output);
  }

  // int32 remaining_time = 3;
  if (this->remaining_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->remaining_time(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:ItemCooldownInfo)
}

size_t ItemCooldownInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ItemCooldownInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_id());
  }

  // int32 duration = 2;
  if (this->duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->duration());
  }

  // int32 remaining_time = 3;
  if (this->remaining_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->remaining_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemCooldownInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ItemCooldownInfo*>(&from));
}

void ItemCooldownInfo::MergeFrom(const ItemCooldownInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ItemCooldownInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.item_id() != 0) {
    set_item_id(from.item_id());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
  if (from.remaining_time() != 0) {
    set_remaining_time(from.remaining_time());
  }
}

void ItemCooldownInfo::CopyFrom(const ItemCooldownInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ItemCooldownInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemCooldownInfo::IsInitialized() const {
  return true;
}

void ItemCooldownInfo::Swap(ItemCooldownInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemCooldownInfo::InternalSwap(ItemCooldownInfo* other) {
  using std::swap;
  swap(item_id_, other->item_id_);
  swap(duration_, other->duration_);
  swap(remaining_time_, other->remaining_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string ItemCooldownInfo::GetTypeName() const {
  return "ItemCooldownInfo";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemCooldownInfo

// uint32 item_id = 1;
void ItemCooldownInfo::clear_item_id() {
  item_id_ = 0u;
}
::google::protobuf::uint32 ItemCooldownInfo::item_id() const {
  // @@protoc_insertion_point(field_get:ItemCooldownInfo.item_id)
  return item_id_;
}
void ItemCooldownInfo::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:ItemCooldownInfo.item_id)
}

// int32 duration = 2;
void ItemCooldownInfo::clear_duration() {
  duration_ = 0;
}
::google::protobuf::int32 ItemCooldownInfo::duration() const {
  // @@protoc_insertion_point(field_get:ItemCooldownInfo.duration)
  return duration_;
}
void ItemCooldownInfo::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:ItemCooldownInfo.duration)
}

// int32 remaining_time = 3;
void ItemCooldownInfo::clear_remaining_time() {
  remaining_time_ = 0;
}
::google::protobuf::int32 ItemCooldownInfo::remaining_time() const {
  // @@protoc_insertion_point(field_get:ItemCooldownInfo.remaining_time)
  return remaining_time_;
}
void ItemCooldownInfo::set_remaining_time(::google::protobuf::int32 value) {
  
  remaining_time_ = value;
  // @@protoc_insertion_point(field_set:ItemCooldownInfo.remaining_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemCooldownList::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemCooldownList::ItemCooldownList()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ItemCooldownList_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ItemCooldownList)
}
ItemCooldownList::ItemCooldownList(const ItemCooldownList& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      result_(from.result_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ItemCooldownList)
}

void ItemCooldownList::SharedCtor() {
  _cached_size_ = 0;
}

ItemCooldownList::~ItemCooldownList() {
  // @@protoc_insertion_point(destructor:ItemCooldownList)
  SharedDtor();
}

void ItemCooldownList::SharedDtor() {
}

void ItemCooldownList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ItemCooldownList& ItemCooldownList::default_instance() {
  protobuf_ItemCooldownList_2eproto::InitDefaults();
  return *internal_default_instance();
}

ItemCooldownList* ItemCooldownList::New(::google::protobuf::Arena* arena) const {
  ItemCooldownList* n = new ItemCooldownList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemCooldownList::Clear() {
// @@protoc_insertion_point(message_clear_start:ItemCooldownList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.Clear();
  _internal_metadata_.Clear();
}

bool ItemCooldownList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:ItemCooldownList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ItemCooldownInfo result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ItemCooldownList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ItemCooldownList)
  return false;
#undef DO_
}

void ItemCooldownList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ItemCooldownList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ItemCooldownInfo result = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->result_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->result(static_cast<int>(i)), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:ItemCooldownList)
}

size_t ItemCooldownList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ItemCooldownList)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .ItemCooldownInfo result = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->result_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemCooldownList::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ItemCooldownList*>(&from));
}

void ItemCooldownList::MergeFrom(const ItemCooldownList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ItemCooldownList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  result_.MergeFrom(from.result_);
}

void ItemCooldownList::CopyFrom(const ItemCooldownList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ItemCooldownList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemCooldownList::IsInitialized() const {
  return true;
}

void ItemCooldownList::Swap(ItemCooldownList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemCooldownList::InternalSwap(ItemCooldownList* other) {
  using std::swap;
  result_.InternalSwap(&other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string ItemCooldownList::GetTypeName() const {
  return "ItemCooldownList";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemCooldownList

// repeated .ItemCooldownInfo result = 1;
int ItemCooldownList::result_size() const {
  return result_.size();
}
void ItemCooldownList::clear_result() {
  result_.Clear();
}
const ::ItemCooldownInfo& ItemCooldownList::result(int index) const {
  // @@protoc_insertion_point(field_get:ItemCooldownList.result)
  return result_.Get(index);
}
::ItemCooldownInfo* ItemCooldownList::mutable_result(int index) {
  // @@protoc_insertion_point(field_mutable:ItemCooldownList.result)
  return result_.Mutable(index);
}
::ItemCooldownInfo* ItemCooldownList::add_result() {
  // @@protoc_insertion_point(field_add:ItemCooldownList.result)
  return result_.Add();
}
::google::protobuf::RepeatedPtrField< ::ItemCooldownInfo >*
ItemCooldownList::mutable_result() {
  // @@protoc_insertion_point(field_mutable_list:ItemCooldownList.result)
  return &result_;
}
const ::google::protobuf::RepeatedPtrField< ::ItemCooldownInfo >&
ItemCooldownList::result() const {
  // @@protoc_insertion_point(field_list:ItemCooldownList.result)
  return result_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
