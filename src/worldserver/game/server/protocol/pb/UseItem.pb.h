// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UseItem.proto

#ifndef PROTOBUF_UseItem_2eproto__INCLUDED
#define PROTOBUF_UseItem_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
class UseItem;
class UseItemDefaultTypeInternal;
extern UseItemDefaultTypeInternal _UseItem_default_instance_;

namespace protobuf_UseItem_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_UseItem_2eproto

// ===================================================================

class UseItem : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:UseItem) */ {
 public:
  UseItem();
  virtual ~UseItem();

  UseItem(const UseItem& from);

  inline UseItem& operator=(const UseItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UseItem(UseItem&& from) noexcept
    : UseItem() {
    *this = ::std::move(from);
  }

  inline UseItem& operator=(UseItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const UseItem& default_instance();

  static inline const UseItem* internal_default_instance() {
    return reinterpret_cast<const UseItem*>(
               &_UseItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(UseItem* other);
  friend void swap(UseItem& a, UseItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UseItem* New() const PROTOBUF_FINAL { return New(NULL); }

  UseItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const UseItem& from);
  void MergeFrom(const UseItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UseItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 slot = 1;
  void clear_slot();
  static const int kSlotFieldNumber = 1;
  ::google::protobuf::int32 slot() const;
  void set_slot(::google::protobuf::int32 value);

  // uint32 item = 2;
  void clear_item();
  static const int kItemFieldNumber = 2;
  ::google::protobuf::uint32 item() const;
  void set_item(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UseItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::int32 slot_;
  ::google::protobuf::uint32 item_;
  mutable int _cached_size_;
  friend struct protobuf_UseItem_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UseItem

// int32 slot = 1;
inline void UseItem::clear_slot() {
  slot_ = 0;
}
inline ::google::protobuf::int32 UseItem::slot() const {
  // @@protoc_insertion_point(field_get:UseItem.slot)
  return slot_;
}
inline void UseItem::set_slot(::google::protobuf::int32 value) {
  
  slot_ = value;
  // @@protoc_insertion_point(field_set:UseItem.slot)
}

// uint32 item = 2;
inline void UseItem::clear_item() {
  item_ = 0u;
}
inline ::google::protobuf::uint32 UseItem::item() const {
  // @@protoc_insertion_point(field_get:UseItem.item)
  return item_;
}
inline void UseItem::set_item(::google::protobuf::uint32 value) {
  
  item_ = value;
  // @@protoc_insertion_point(field_set:UseItem.item)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_UseItem_2eproto__INCLUDED
