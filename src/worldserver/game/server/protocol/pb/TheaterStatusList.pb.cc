// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TheaterStatusList.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "TheaterStatusList.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
class TheaterStatusDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TheaterStatus>
     _instance;
} _TheaterStatus_default_instance_;
class TheaterStatusListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TheaterStatusList>
     _instance;
} _TheaterStatusList_default_instance_;

namespace protobuf_TheaterStatusList_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _TheaterStatus_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TheaterStatus_default_instance_);_TheaterStatusList_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TheaterStatusList_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_TheaterStatusList_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TheaterStatus::kIdFieldNumber;
const int TheaterStatus::kUpdateDiffFieldNumber;
const int TheaterStatus::kMapIdFieldNumber;
const int TheaterStatus::kPlayerCountFieldNumber;
const int TheaterStatus::kRobotCountFieldNumber;
const int TheaterStatus::kItemCountFieldNumber;
const int TheaterStatus::kCombatGradeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TheaterStatus::TheaterStatus()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TheaterStatusList_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TheaterStatus)
}
TheaterStatus::TheaterStatus(const TheaterStatus& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&combat_grade_) -
    reinterpret_cast<char*>(&id_)) + sizeof(combat_grade_));
  // @@protoc_insertion_point(copy_constructor:TheaterStatus)
}

void TheaterStatus::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&combat_grade_) -
      reinterpret_cast<char*>(&id_)) + sizeof(combat_grade_));
  _cached_size_ = 0;
}

TheaterStatus::~TheaterStatus() {
  // @@protoc_insertion_point(destructor:TheaterStatus)
  SharedDtor();
}

void TheaterStatus::SharedDtor() {
}

void TheaterStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TheaterStatus& TheaterStatus::default_instance() {
  protobuf_TheaterStatusList_2eproto::InitDefaults();
  return *internal_default_instance();
}

TheaterStatus* TheaterStatus::New(::google::protobuf::Arena* arena) const {
  TheaterStatus* n = new TheaterStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TheaterStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:TheaterStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&combat_grade_) -
      reinterpret_cast<char*>(&id_)) + sizeof(combat_grade_));
  _internal_metadata_.Clear();
}

bool TheaterStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:TheaterStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 update_diff = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &update_diff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 map_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &map_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 player_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 robot_count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &robot_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 item_count = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 combat_grade = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &combat_grade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TheaterStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TheaterStatus)
  return false;
#undef DO_
}

void TheaterStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TheaterStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // int32 update_diff = 2;
  if (this->update_diff() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->update_diff(), output);
  }

  // uint32 map_id = 3;
  if (this->map_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->map_id(), output);
  }

  // int32 player_count = 4;
  if (this->player_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->player_count(), output);
  }

  // int32 robot_count = 5;
  if (this->robot_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->robot_count(), output);
  }

  // int32 item_count = 6;
  if (this->item_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->item_count(), output);
  }

  // uint32 combat_grade = 7;
  if (this->combat_grade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->combat_grade(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:TheaterStatus)
}

size_t TheaterStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TheaterStatus)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // int32 update_diff = 2;
  if (this->update_diff() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->update_diff());
  }

  // uint32 map_id = 3;
  if (this->map_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->map_id());
  }

  // int32 player_count = 4;
  if (this->player_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->player_count());
  }

  // int32 robot_count = 5;
  if (this->robot_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->robot_count());
  }

  // int32 item_count = 6;
  if (this->item_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item_count());
  }

  // uint32 combat_grade = 7;
  if (this->combat_grade() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->combat_grade());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TheaterStatus::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TheaterStatus*>(&from));
}

void TheaterStatus::MergeFrom(const TheaterStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TheaterStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.update_diff() != 0) {
    set_update_diff(from.update_diff());
  }
  if (from.map_id() != 0) {
    set_map_id(from.map_id());
  }
  if (from.player_count() != 0) {
    set_player_count(from.player_count());
  }
  if (from.robot_count() != 0) {
    set_robot_count(from.robot_count());
  }
  if (from.item_count() != 0) {
    set_item_count(from.item_count());
  }
  if (from.combat_grade() != 0) {
    set_combat_grade(from.combat_grade());
  }
}

void TheaterStatus::CopyFrom(const TheaterStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TheaterStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TheaterStatus::IsInitialized() const {
  return true;
}

void TheaterStatus::Swap(TheaterStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TheaterStatus::InternalSwap(TheaterStatus* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(update_diff_, other->update_diff_);
  swap(map_id_, other->map_id_);
  swap(player_count_, other->player_count_);
  swap(robot_count_, other->robot_count_);
  swap(item_count_, other->item_count_);
  swap(combat_grade_, other->combat_grade_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string TheaterStatus::GetTypeName() const {
  return "TheaterStatus";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TheaterStatus

// uint32 id = 1;
void TheaterStatus::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 TheaterStatus::id() const {
  // @@protoc_insertion_point(field_get:TheaterStatus.id)
  return id_;
}
void TheaterStatus::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:TheaterStatus.id)
}

// int32 update_diff = 2;
void TheaterStatus::clear_update_diff() {
  update_diff_ = 0;
}
::google::protobuf::int32 TheaterStatus::update_diff() const {
  // @@protoc_insertion_point(field_get:TheaterStatus.update_diff)
  return update_diff_;
}
void TheaterStatus::set_update_diff(::google::protobuf::int32 value) {
  
  update_diff_ = value;
  // @@protoc_insertion_point(field_set:TheaterStatus.update_diff)
}

// uint32 map_id = 3;
void TheaterStatus::clear_map_id() {
  map_id_ = 0u;
}
::google::protobuf::uint32 TheaterStatus::map_id() const {
  // @@protoc_insertion_point(field_get:TheaterStatus.map_id)
  return map_id_;
}
void TheaterStatus::set_map_id(::google::protobuf::uint32 value) {
  
  map_id_ = value;
  // @@protoc_insertion_point(field_set:TheaterStatus.map_id)
}

// int32 player_count = 4;
void TheaterStatus::clear_player_count() {
  player_count_ = 0;
}
::google::protobuf::int32 TheaterStatus::player_count() const {
  // @@protoc_insertion_point(field_get:TheaterStatus.player_count)
  return player_count_;
}
void TheaterStatus::set_player_count(::google::protobuf::int32 value) {
  
  player_count_ = value;
  // @@protoc_insertion_point(field_set:TheaterStatus.player_count)
}

// int32 robot_count = 5;
void TheaterStatus::clear_robot_count() {
  robot_count_ = 0;
}
::google::protobuf::int32 TheaterStatus::robot_count() const {
  // @@protoc_insertion_point(field_get:TheaterStatus.robot_count)
  return robot_count_;
}
void TheaterStatus::set_robot_count(::google::protobuf::int32 value) {
  
  robot_count_ = value;
  // @@protoc_insertion_point(field_set:TheaterStatus.robot_count)
}

// int32 item_count = 6;
void TheaterStatus::clear_item_count() {
  item_count_ = 0;
}
::google::protobuf::int32 TheaterStatus::item_count() const {
  // @@protoc_insertion_point(field_get:TheaterStatus.item_count)
  return item_count_;
}
void TheaterStatus::set_item_count(::google::protobuf::int32 value) {
  
  item_count_ = value;
  // @@protoc_insertion_point(field_set:TheaterStatus.item_count)
}

// uint32 combat_grade = 7;
void TheaterStatus::clear_combat_grade() {
  combat_grade_ = 0u;
}
::google::protobuf::uint32 TheaterStatus::combat_grade() const {
  // @@protoc_insertion_point(field_get:TheaterStatus.combat_grade)
  return combat_grade_;
}
void TheaterStatus::set_combat_grade(::google::protobuf::uint32 value) {
  
  combat_grade_ = value;
  // @@protoc_insertion_point(field_set:TheaterStatus.combat_grade)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TheaterStatusList::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TheaterStatusList::TheaterStatusList()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TheaterStatusList_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TheaterStatusList)
}
TheaterStatusList::TheaterStatusList(const TheaterStatusList& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      result_(from.result_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TheaterStatusList)
}

void TheaterStatusList::SharedCtor() {
  _cached_size_ = 0;
}

TheaterStatusList::~TheaterStatusList() {
  // @@protoc_insertion_point(destructor:TheaterStatusList)
  SharedDtor();
}

void TheaterStatusList::SharedDtor() {
}

void TheaterStatusList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TheaterStatusList& TheaterStatusList::default_instance() {
  protobuf_TheaterStatusList_2eproto::InitDefaults();
  return *internal_default_instance();
}

TheaterStatusList* TheaterStatusList::New(::google::protobuf::Arena* arena) const {
  TheaterStatusList* n = new TheaterStatusList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TheaterStatusList::Clear() {
// @@protoc_insertion_point(message_clear_start:TheaterStatusList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.Clear();
  _internal_metadata_.Clear();
}

bool TheaterStatusList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:TheaterStatusList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TheaterStatus result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TheaterStatusList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TheaterStatusList)
  return false;
#undef DO_
}

void TheaterStatusList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TheaterStatusList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TheaterStatus result = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->result_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->result(static_cast<int>(i)), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:TheaterStatusList)
}

size_t TheaterStatusList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TheaterStatusList)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated .TheaterStatus result = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->result_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TheaterStatusList::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TheaterStatusList*>(&from));
}

void TheaterStatusList::MergeFrom(const TheaterStatusList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TheaterStatusList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  result_.MergeFrom(from.result_);
}

void TheaterStatusList::CopyFrom(const TheaterStatusList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TheaterStatusList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TheaterStatusList::IsInitialized() const {
  return true;
}

void TheaterStatusList::Swap(TheaterStatusList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TheaterStatusList::InternalSwap(TheaterStatusList* other) {
  using std::swap;
  result_.InternalSwap(&other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string TheaterStatusList::GetTypeName() const {
  return "TheaterStatusList";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TheaterStatusList

// repeated .TheaterStatus result = 1;
int TheaterStatusList::result_size() const {
  return result_.size();
}
void TheaterStatusList::clear_result() {
  result_.Clear();
}
const ::TheaterStatus& TheaterStatusList::result(int index) const {
  // @@protoc_insertion_point(field_get:TheaterStatusList.result)
  return result_.Get(index);
}
::TheaterStatus* TheaterStatusList::mutable_result(int index) {
  // @@protoc_insertion_point(field_mutable:TheaterStatusList.result)
  return result_.Mutable(index);
}
::TheaterStatus* TheaterStatusList::add_result() {
  // @@protoc_insertion_point(field_add:TheaterStatusList.result)
  return result_.Add();
}
::google::protobuf::RepeatedPtrField< ::TheaterStatus >*
TheaterStatusList::mutable_result() {
  // @@protoc_insertion_point(field_mutable_list:TheaterStatusList.result)
  return &result_;
}
const ::google::protobuf::RepeatedPtrField< ::TheaterStatus >&
TheaterStatusList::result() const {
  // @@protoc_insertion_point(field_list:TheaterStatusList.result)
  return result_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
