// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TheaterInfo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "TheaterInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
class TheaterInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TheaterInfo>
     _instance;
} _TheaterInfo_default_instance_;

namespace protobuf_TheaterInfo_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _TheaterInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TheaterInfo_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_TheaterInfo_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TheaterInfo::kTheaterIdFieldNumber;
const int TheaterInfo::kMapIdFieldNumber;
const int TheaterInfo::kCombatGradeFieldNumber;
const int TheaterInfo::kRequestBattleEndAdFieldNumber;
const int TheaterInfo::kSafezoneCenterXFieldNumber;
const int TheaterInfo::kSafezoneCenterYFieldNumber;
const int TheaterInfo::kSafezoneRadiusFieldNumber;
const int TheaterInfo::kBattleDurationFieldNumber;
const int TheaterInfo::kEnableAppReviewModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TheaterInfo::TheaterInfo()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_TheaterInfo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TheaterInfo)
}
TheaterInfo::TheaterInfo(const TheaterInfo& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&theater_id_, &from.theater_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&battle_duration_) -
    reinterpret_cast<char*>(&theater_id_)) + sizeof(battle_duration_));
  // @@protoc_insertion_point(copy_constructor:TheaterInfo)
}

void TheaterInfo::SharedCtor() {
  ::memset(&theater_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&battle_duration_) -
      reinterpret_cast<char*>(&theater_id_)) + sizeof(battle_duration_));
  _cached_size_ = 0;
}

TheaterInfo::~TheaterInfo() {
  // @@protoc_insertion_point(destructor:TheaterInfo)
  SharedDtor();
}

void TheaterInfo::SharedDtor() {
}

void TheaterInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const TheaterInfo& TheaterInfo::default_instance() {
  protobuf_TheaterInfo_2eproto::InitDefaults();
  return *internal_default_instance();
}

TheaterInfo* TheaterInfo::New(::google::protobuf::Arena* arena) const {
  TheaterInfo* n = new TheaterInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TheaterInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:TheaterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&theater_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&battle_duration_) -
      reinterpret_cast<char*>(&theater_id_)) + sizeof(battle_duration_));
  _internal_metadata_.Clear();
}

bool TheaterInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:TheaterInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 theater_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &theater_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 map_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &map_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 combat_grade = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &combat_grade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool request_battle_end_ad = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &request_battle_end_ad_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 safezone_center_x = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &safezone_center_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 safezone_center_y = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &safezone_center_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 safezone_radius = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &safezone_radius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 battle_duration = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &battle_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable_app_review_mode = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_app_review_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TheaterInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TheaterInfo)
  return false;
#undef DO_
}

void TheaterInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TheaterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 theater_id = 1;
  if (this->theater_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->theater_id(), output);
  }

  // uint32 map_id = 2;
  if (this->map_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->map_id(), output);
  }

  // uint32 combat_grade = 3;
  if (this->combat_grade() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->combat_grade(), output);
  }

  // bool request_battle_end_ad = 4;
  if (this->request_battle_end_ad() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->request_battle_end_ad(), output);
  }

  // int32 safezone_center_x = 5;
  if (this->safezone_center_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->safezone_center_x(), output);
  }

  // int32 safezone_center_y = 6;
  if (this->safezone_center_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->safezone_center_y(), output);
  }

  // int32 safezone_radius = 7;
  if (this->safezone_radius() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->safezone_radius(), output);
  }

  // int32 battle_duration = 8;
  if (this->battle_duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->battle_duration(), output);
  }

  // bool enable_app_review_mode = 9;
  if (this->enable_app_review_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->enable_app_review_mode(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:TheaterInfo)
}

size_t TheaterInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TheaterInfo)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 theater_id = 1;
  if (this->theater_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->theater_id());
  }

  // uint32 map_id = 2;
  if (this->map_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->map_id());
  }

  // uint32 combat_grade = 3;
  if (this->combat_grade() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->combat_grade());
  }

  // int32 safezone_center_x = 5;
  if (this->safezone_center_x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->safezone_center_x());
  }

  // int32 safezone_center_y = 6;
  if (this->safezone_center_y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->safezone_center_y());
  }

  // bool request_battle_end_ad = 4;
  if (this->request_battle_end_ad() != 0) {
    total_size += 1 + 1;
  }

  // bool enable_app_review_mode = 9;
  if (this->enable_app_review_mode() != 0) {
    total_size += 1 + 1;
  }

  // int32 safezone_radius = 7;
  if (this->safezone_radius() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->safezone_radius());
  }

  // int32 battle_duration = 8;
  if (this->battle_duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->battle_duration());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TheaterInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TheaterInfo*>(&from));
}

void TheaterInfo::MergeFrom(const TheaterInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TheaterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.theater_id() != 0) {
    set_theater_id(from.theater_id());
  }
  if (from.map_id() != 0) {
    set_map_id(from.map_id());
  }
  if (from.combat_grade() != 0) {
    set_combat_grade(from.combat_grade());
  }
  if (from.safezone_center_x() != 0) {
    set_safezone_center_x(from.safezone_center_x());
  }
  if (from.safezone_center_y() != 0) {
    set_safezone_center_y(from.safezone_center_y());
  }
  if (from.request_battle_end_ad() != 0) {
    set_request_battle_end_ad(from.request_battle_end_ad());
  }
  if (from.enable_app_review_mode() != 0) {
    set_enable_app_review_mode(from.enable_app_review_mode());
  }
  if (from.safezone_radius() != 0) {
    set_safezone_radius(from.safezone_radius());
  }
  if (from.battle_duration() != 0) {
    set_battle_duration(from.battle_duration());
  }
}

void TheaterInfo::CopyFrom(const TheaterInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TheaterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TheaterInfo::IsInitialized() const {
  return true;
}

void TheaterInfo::Swap(TheaterInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TheaterInfo::InternalSwap(TheaterInfo* other) {
  using std::swap;
  swap(theater_id_, other->theater_id_);
  swap(map_id_, other->map_id_);
  swap(combat_grade_, other->combat_grade_);
  swap(safezone_center_x_, other->safezone_center_x_);
  swap(safezone_center_y_, other->safezone_center_y_);
  swap(request_battle_end_ad_, other->request_battle_end_ad_);
  swap(enable_app_review_mode_, other->enable_app_review_mode_);
  swap(safezone_radius_, other->safezone_radius_);
  swap(battle_duration_, other->battle_duration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string TheaterInfo::GetTypeName() const {
  return "TheaterInfo";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TheaterInfo

// uint32 theater_id = 1;
void TheaterInfo::clear_theater_id() {
  theater_id_ = 0u;
}
::google::protobuf::uint32 TheaterInfo::theater_id() const {
  // @@protoc_insertion_point(field_get:TheaterInfo.theater_id)
  return theater_id_;
}
void TheaterInfo::set_theater_id(::google::protobuf::uint32 value) {
  
  theater_id_ = value;
  // @@protoc_insertion_point(field_set:TheaterInfo.theater_id)
}

// uint32 map_id = 2;
void TheaterInfo::clear_map_id() {
  map_id_ = 0u;
}
::google::protobuf::uint32 TheaterInfo::map_id() const {
  // @@protoc_insertion_point(field_get:TheaterInfo.map_id)
  return map_id_;
}
void TheaterInfo::set_map_id(::google::protobuf::uint32 value) {
  
  map_id_ = value;
  // @@protoc_insertion_point(field_set:TheaterInfo.map_id)
}

// uint32 combat_grade = 3;
void TheaterInfo::clear_combat_grade() {
  combat_grade_ = 0u;
}
::google::protobuf::uint32 TheaterInfo::combat_grade() const {
  // @@protoc_insertion_point(field_get:TheaterInfo.combat_grade)
  return combat_grade_;
}
void TheaterInfo::set_combat_grade(::google::protobuf::uint32 value) {
  
  combat_grade_ = value;
  // @@protoc_insertion_point(field_set:TheaterInfo.combat_grade)
}

// bool request_battle_end_ad = 4;
void TheaterInfo::clear_request_battle_end_ad() {
  request_battle_end_ad_ = false;
}
bool TheaterInfo::request_battle_end_ad() const {
  // @@protoc_insertion_point(field_get:TheaterInfo.request_battle_end_ad)
  return request_battle_end_ad_;
}
void TheaterInfo::set_request_battle_end_ad(bool value) {
  
  request_battle_end_ad_ = value;
  // @@protoc_insertion_point(field_set:TheaterInfo.request_battle_end_ad)
}

// int32 safezone_center_x = 5;
void TheaterInfo::clear_safezone_center_x() {
  safezone_center_x_ = 0;
}
::google::protobuf::int32 TheaterInfo::safezone_center_x() const {
  // @@protoc_insertion_point(field_get:TheaterInfo.safezone_center_x)
  return safezone_center_x_;
}
void TheaterInfo::set_safezone_center_x(::google::protobuf::int32 value) {
  
  safezone_center_x_ = value;
  // @@protoc_insertion_point(field_set:TheaterInfo.safezone_center_x)
}

// int32 safezone_center_y = 6;
void TheaterInfo::clear_safezone_center_y() {
  safezone_center_y_ = 0;
}
::google::protobuf::int32 TheaterInfo::safezone_center_y() const {
  // @@protoc_insertion_point(field_get:TheaterInfo.safezone_center_y)
  return safezone_center_y_;
}
void TheaterInfo::set_safezone_center_y(::google::protobuf::int32 value) {
  
  safezone_center_y_ = value;
  // @@protoc_insertion_point(field_set:TheaterInfo.safezone_center_y)
}

// int32 safezone_radius = 7;
void TheaterInfo::clear_safezone_radius() {
  safezone_radius_ = 0;
}
::google::protobuf::int32 TheaterInfo::safezone_radius() const {
  // @@protoc_insertion_point(field_get:TheaterInfo.safezone_radius)
  return safezone_radius_;
}
void TheaterInfo::set_safezone_radius(::google::protobuf::int32 value) {
  
  safezone_radius_ = value;
  // @@protoc_insertion_point(field_set:TheaterInfo.safezone_radius)
}

// int32 battle_duration = 8;
void TheaterInfo::clear_battle_duration() {
  battle_duration_ = 0;
}
::google::protobuf::int32 TheaterInfo::battle_duration() const {
  // @@protoc_insertion_point(field_get:TheaterInfo.battle_duration)
  return battle_duration_;
}
void TheaterInfo::set_battle_duration(::google::protobuf::int32 value) {
  
  battle_duration_ = value;
  // @@protoc_insertion_point(field_set:TheaterInfo.battle_duration)
}

// bool enable_app_review_mode = 9;
void TheaterInfo::clear_enable_app_review_mode() {
  enable_app_review_mode_ = false;
}
bool TheaterInfo::enable_app_review_mode() const {
  // @@protoc_insertion_point(field_get:TheaterInfo.enable_app_review_mode)
  return enable_app_review_mode_;
}
void TheaterInfo::set_enable_app_review_mode(bool value) {
  
  enable_app_review_mode_ = value;
  // @@protoc_insertion_point(field_set:TheaterInfo.enable_app_review_mode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
