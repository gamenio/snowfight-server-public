// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlayerLogin.proto

#ifndef PROTOBUF_PlayerLogin_2eproto__INCLUDED
#define PROTOBUF_PlayerLogin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
class PlayerLogin;
class PlayerLoginDefaultTypeInternal;
extern PlayerLoginDefaultTypeInternal _PlayerLogin_default_instance_;
class PlayerLogin_StatStage;
class PlayerLogin_StatStageDefaultTypeInternal;
extern PlayerLogin_StatStageDefaultTypeInternal _PlayerLogin_StatStage_default_instance_;

namespace protobuf_PlayerLogin_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_PlayerLogin_2eproto

// ===================================================================

class PlayerLogin_StatStage : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PlayerLogin.StatStage) */ {
 public:
  PlayerLogin_StatStage();
  virtual ~PlayerLogin_StatStage();

  PlayerLogin_StatStage(const PlayerLogin_StatStage& from);

  inline PlayerLogin_StatStage& operator=(const PlayerLogin_StatStage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLogin_StatStage(PlayerLogin_StatStage&& from) noexcept
    : PlayerLogin_StatStage() {
    *this = ::std::move(from);
  }

  inline PlayerLogin_StatStage& operator=(PlayerLogin_StatStage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const PlayerLogin_StatStage& default_instance();

  static inline const PlayerLogin_StatStage* internal_default_instance() {
    return reinterpret_cast<const PlayerLogin_StatStage*>(
               &_PlayerLogin_StatStage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PlayerLogin_StatStage* other);
  friend void swap(PlayerLogin_StatStage& a, PlayerLogin_StatStage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLogin_StatStage* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerLogin_StatStage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const PlayerLogin_StatStage& from);
  void MergeFrom(const PlayerLogin_StatStage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PlayerLogin_StatStage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 stage = 2;
  void clear_stage();
  static const int kStageFieldNumber = 2;
  ::google::protobuf::int32 stage() const;
  void set_stage(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerLogin.StatStage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 stage_;
  mutable int _cached_size_;
  friend struct protobuf_PlayerLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerLogin : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:PlayerLogin) */ {
 public:
  PlayerLogin();
  virtual ~PlayerLogin();

  PlayerLogin(const PlayerLogin& from);

  inline PlayerLogin& operator=(const PlayerLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLogin(PlayerLogin&& from) noexcept
    : PlayerLogin() {
    *this = ::std::move(from);
  }

  inline PlayerLogin& operator=(PlayerLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const PlayerLogin& default_instance();

  static inline const PlayerLogin* internal_default_instance() {
    return reinterpret_cast<const PlayerLogin*>(
               &_PlayerLogin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PlayerLogin* other);
  friend void swap(PlayerLogin& a, PlayerLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLogin* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerLogin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const PlayerLogin& from);
  void MergeFrom(const PlayerLogin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PlayerLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerLogin_StatStage StatStage;

  // accessors -------------------------------------------------------

  // repeated .PlayerLogin.StatStage stat_stage_list = 12;
  int stat_stage_list_size() const;
  void clear_stat_stage_list();
  static const int kStatStageListFieldNumber = 12;
  const ::PlayerLogin_StatStage& stat_stage_list(int index) const;
  ::PlayerLogin_StatStage* mutable_stat_stage_list(int index);
  ::PlayerLogin_StatStage* add_stat_stage_list();
  ::google::protobuf::RepeatedPtrField< ::PlayerLogin_StatStage >*
      mutable_stat_stage_list();
  const ::google::protobuf::RepeatedPtrField< ::PlayerLogin_StatStage >&
      stat_stage_list() const;

  // string lang = 4;
  void clear_lang();
  static const int kLangFieldNumber = 4;
  const ::std::string& lang() const;
  void set_lang(const ::std::string& value);
  #if LANG_CXX11
  void set_lang(::std::string&& value);
  #endif
  void set_lang(const char* value);
  void set_lang(const char* value, size_t size);
  ::std::string* mutable_lang();
  ::std::string* release_lang();
  void set_allocated_lang(::std::string* lang);

  // string country = 5;
  void clear_country();
  static const int kCountryFieldNumber = 5;
  const ::std::string& country() const;
  void set_country(const ::std::string& value);
  #if LANG_CXX11
  void set_country(::std::string&& value);
  #endif
  void set_country(const char* value);
  void set_country(const char* value, size_t size);
  ::std::string* mutable_country();
  ::std::string* release_country();
  void set_allocated_country(::std::string* country);

  // string char_name = 6;
  void clear_char_name();
  static const int kCharNameFieldNumber = 6;
  const ::std::string& char_name() const;
  void set_char_name(const ::std::string& value);
  #if LANG_CXX11
  void set_char_name(::std::string&& value);
  #endif
  void set_char_name(const char* value);
  void set_char_name(const char* value, size_t size);
  ::std::string* mutable_char_name();
  ::std::string* release_char_name();
  void set_allocated_char_name(::std::string* char_name);

  // uint32 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint32 guid() const;
  void set_guid(::google::protobuf::uint32 value);

  // uint32 screen_width = 2;
  void clear_screen_width();
  static const int kScreenWidthFieldNumber = 2;
  ::google::protobuf::uint32 screen_width() const;
  void set_screen_width(::google::protobuf::uint32 value);

  // uint32 screen_height = 3;
  void clear_screen_height();
  static const int kScreenHeightFieldNumber = 3;
  ::google::protobuf::uint32 screen_height() const;
  void set_screen_height(::google::protobuf::uint32 value);

  // uint32 char_id = 7;
  void clear_char_id();
  static const int kCharIdFieldNumber = 7;
  ::google::protobuf::uint32 char_id() const;
  void set_char_id(::google::protobuf::uint32 value);

  // int32 total_kills = 8;
  void clear_total_kills();
  static const int kTotalKillsFieldNumber = 8;
  ::google::protobuf::int32 total_kills() const;
  void set_total_kills(::google::protobuf::int32 value);

  // int32 property = 9;
  void clear_property();
  static const int kPropertyFieldNumber = 9;
  ::google::protobuf::int32 property() const;
  void set_property(::google::protobuf::int32 value);

  // uint32 level = 10;
  void clear_level();
  static const int kLevelFieldNumber = 10;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // int32 experience = 11;
  void clear_experience();
  static const int kExperienceFieldNumber = 11;
  ::google::protobuf::int32 experience() const;
  void set_experience(::google::protobuf::int32 value);

  // int32 controller_type = 13;
  void clear_controller_type();
  static const int kControllerTypeFieldNumber = 13;
  ::google::protobuf::int32 controller_type() const;
  void set_controller_type(::google::protobuf::int32 value);

  // bool trainee = 14;
  void clear_trainee();
  static const int kTraineeFieldNumber = 14;
  bool trainee() const;
  void set_trainee(bool value);

  // int32 reward_stage = 15;
  void clear_reward_stage();
  static const int kRewardStageFieldNumber = 15;
  ::google::protobuf::int32 reward_stage() const;
  void set_reward_stage(::google::protobuf::int32 value);

  // int32 daily_reward_days = 16;
  void clear_daily_reward_days();
  static const int kDailyRewardDaysFieldNumber = 16;
  ::google::protobuf::int32 daily_reward_days() const;
  void set_daily_reward_days(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerLogin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::PlayerLogin_StatStage > stat_stage_list_;
  ::google::protobuf::internal::ArenaStringPtr lang_;
  ::google::protobuf::internal::ArenaStringPtr country_;
  ::google::protobuf::internal::ArenaStringPtr char_name_;
  ::google::protobuf::uint32 guid_;
  ::google::protobuf::uint32 screen_width_;
  ::google::protobuf::uint32 screen_height_;
  ::google::protobuf::uint32 char_id_;
  ::google::protobuf::int32 total_kills_;
  ::google::protobuf::int32 property_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::int32 experience_;
  ::google::protobuf::int32 controller_type_;
  bool trainee_;
  ::google::protobuf::int32 reward_stage_;
  ::google::protobuf::int32 daily_reward_days_;
  mutable int _cached_size_;
  friend struct protobuf_PlayerLogin_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PlayerLogin_StatStage

// int32 type = 1;
inline void PlayerLogin_StatStage::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 PlayerLogin_StatStage::type() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.StatStage.type)
  return type_;
}
inline void PlayerLogin_StatStage::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.StatStage.type)
}

// int32 stage = 2;
inline void PlayerLogin_StatStage::clear_stage() {
  stage_ = 0;
}
inline ::google::protobuf::int32 PlayerLogin_StatStage::stage() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.StatStage.stage)
  return stage_;
}
inline void PlayerLogin_StatStage::set_stage(::google::protobuf::int32 value) {
  
  stage_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.StatStage.stage)
}

// -------------------------------------------------------------------

// PlayerLogin

// uint32 guid = 1;
inline void PlayerLogin::clear_guid() {
  guid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLogin::guid() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.guid)
  return guid_;
}
inline void PlayerLogin::set_guid(::google::protobuf::uint32 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.guid)
}

// uint32 screen_width = 2;
inline void PlayerLogin::clear_screen_width() {
  screen_width_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLogin::screen_width() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.screen_width)
  return screen_width_;
}
inline void PlayerLogin::set_screen_width(::google::protobuf::uint32 value) {
  
  screen_width_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.screen_width)
}

// uint32 screen_height = 3;
inline void PlayerLogin::clear_screen_height() {
  screen_height_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLogin::screen_height() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.screen_height)
  return screen_height_;
}
inline void PlayerLogin::set_screen_height(::google::protobuf::uint32 value) {
  
  screen_height_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.screen_height)
}

// string lang = 4;
inline void PlayerLogin::clear_lang() {
  lang_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLogin::lang() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.lang)
  return lang_.GetNoArena();
}
inline void PlayerLogin::set_lang(const ::std::string& value) {
  
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlayerLogin.lang)
}
#if LANG_CXX11
inline void PlayerLogin::set_lang(::std::string&& value) {
  
  lang_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlayerLogin.lang)
}
#endif
inline void PlayerLogin::set_lang(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlayerLogin.lang)
}
inline void PlayerLogin::set_lang(const char* value, size_t size) {
  
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlayerLogin.lang)
}
inline ::std::string* PlayerLogin::mutable_lang() {
  
  // @@protoc_insertion_point(field_mutable:PlayerLogin.lang)
  return lang_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLogin::release_lang() {
  // @@protoc_insertion_point(field_release:PlayerLogin.lang)
  
  return lang_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLogin::set_allocated_lang(::std::string* lang) {
  if (lang != NULL) {
    
  } else {
    
  }
  lang_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang);
  // @@protoc_insertion_point(field_set_allocated:PlayerLogin.lang)
}

// string country = 5;
inline void PlayerLogin::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLogin::country() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.country)
  return country_.GetNoArena();
}
inline void PlayerLogin::set_country(const ::std::string& value) {
  
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlayerLogin.country)
}
#if LANG_CXX11
inline void PlayerLogin::set_country(::std::string&& value) {
  
  country_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlayerLogin.country)
}
#endif
inline void PlayerLogin::set_country(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlayerLogin.country)
}
inline void PlayerLogin::set_country(const char* value, size_t size) {
  
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlayerLogin.country)
}
inline ::std::string* PlayerLogin::mutable_country() {
  
  // @@protoc_insertion_point(field_mutable:PlayerLogin.country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLogin::release_country() {
  // @@protoc_insertion_point(field_release:PlayerLogin.country)
  
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLogin::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    
  } else {
    
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:PlayerLogin.country)
}

// string char_name = 6;
inline void PlayerLogin::clear_char_name() {
  char_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLogin::char_name() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.char_name)
  return char_name_.GetNoArena();
}
inline void PlayerLogin::set_char_name(const ::std::string& value) {
  
  char_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PlayerLogin.char_name)
}
#if LANG_CXX11
inline void PlayerLogin::set_char_name(::std::string&& value) {
  
  char_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PlayerLogin.char_name)
}
#endif
inline void PlayerLogin::set_char_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  char_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PlayerLogin.char_name)
}
inline void PlayerLogin::set_char_name(const char* value, size_t size) {
  
  char_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PlayerLogin.char_name)
}
inline ::std::string* PlayerLogin::mutable_char_name() {
  
  // @@protoc_insertion_point(field_mutable:PlayerLogin.char_name)
  return char_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLogin::release_char_name() {
  // @@protoc_insertion_point(field_release:PlayerLogin.char_name)
  
  return char_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLogin::set_allocated_char_name(::std::string* char_name) {
  if (char_name != NULL) {
    
  } else {
    
  }
  char_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), char_name);
  // @@protoc_insertion_point(field_set_allocated:PlayerLogin.char_name)
}

// uint32 char_id = 7;
inline void PlayerLogin::clear_char_id() {
  char_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLogin::char_id() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.char_id)
  return char_id_;
}
inline void PlayerLogin::set_char_id(::google::protobuf::uint32 value) {
  
  char_id_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.char_id)
}

// int32 total_kills = 8;
inline void PlayerLogin::clear_total_kills() {
  total_kills_ = 0;
}
inline ::google::protobuf::int32 PlayerLogin::total_kills() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.total_kills)
  return total_kills_;
}
inline void PlayerLogin::set_total_kills(::google::protobuf::int32 value) {
  
  total_kills_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.total_kills)
}

// int32 property = 9;
inline void PlayerLogin::clear_property() {
  property_ = 0;
}
inline ::google::protobuf::int32 PlayerLogin::property() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.property)
  return property_;
}
inline void PlayerLogin::set_property(::google::protobuf::int32 value) {
  
  property_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.property)
}

// uint32 level = 10;
inline void PlayerLogin::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLogin::level() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.level)
  return level_;
}
inline void PlayerLogin::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.level)
}

// int32 experience = 11;
inline void PlayerLogin::clear_experience() {
  experience_ = 0;
}
inline ::google::protobuf::int32 PlayerLogin::experience() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.experience)
  return experience_;
}
inline void PlayerLogin::set_experience(::google::protobuf::int32 value) {
  
  experience_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.experience)
}

// repeated .PlayerLogin.StatStage stat_stage_list = 12;
inline int PlayerLogin::stat_stage_list_size() const {
  return stat_stage_list_.size();
}
inline void PlayerLogin::clear_stat_stage_list() {
  stat_stage_list_.Clear();
}
inline const ::PlayerLogin_StatStage& PlayerLogin::stat_stage_list(int index) const {
  // @@protoc_insertion_point(field_get:PlayerLogin.stat_stage_list)
  return stat_stage_list_.Get(index);
}
inline ::PlayerLogin_StatStage* PlayerLogin::mutable_stat_stage_list(int index) {
  // @@protoc_insertion_point(field_mutable:PlayerLogin.stat_stage_list)
  return stat_stage_list_.Mutable(index);
}
inline ::PlayerLogin_StatStage* PlayerLogin::add_stat_stage_list() {
  // @@protoc_insertion_point(field_add:PlayerLogin.stat_stage_list)
  return stat_stage_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PlayerLogin_StatStage >*
PlayerLogin::mutable_stat_stage_list() {
  // @@protoc_insertion_point(field_mutable_list:PlayerLogin.stat_stage_list)
  return &stat_stage_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PlayerLogin_StatStage >&
PlayerLogin::stat_stage_list() const {
  // @@protoc_insertion_point(field_list:PlayerLogin.stat_stage_list)
  return stat_stage_list_;
}

// int32 controller_type = 13;
inline void PlayerLogin::clear_controller_type() {
  controller_type_ = 0;
}
inline ::google::protobuf::int32 PlayerLogin::controller_type() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.controller_type)
  return controller_type_;
}
inline void PlayerLogin::set_controller_type(::google::protobuf::int32 value) {
  
  controller_type_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.controller_type)
}

// bool trainee = 14;
inline void PlayerLogin::clear_trainee() {
  trainee_ = false;
}
inline bool PlayerLogin::trainee() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.trainee)
  return trainee_;
}
inline void PlayerLogin::set_trainee(bool value) {
  
  trainee_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.trainee)
}

// int32 reward_stage = 15;
inline void PlayerLogin::clear_reward_stage() {
  reward_stage_ = 0;
}
inline ::google::protobuf::int32 PlayerLogin::reward_stage() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.reward_stage)
  return reward_stage_;
}
inline void PlayerLogin::set_reward_stage(::google::protobuf::int32 value) {
  
  reward_stage_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.reward_stage)
}

// int32 daily_reward_days = 16;
inline void PlayerLogin::clear_daily_reward_days() {
  daily_reward_days_ = 0;
}
inline ::google::protobuf::int32 PlayerLogin::daily_reward_days() const {
  // @@protoc_insertion_point(field_get:PlayerLogin.daily_reward_days)
  return daily_reward_days_;
}
inline void PlayerLogin::set_daily_reward_days(::google::protobuf::int32 value) {
  
  daily_reward_days_ = value;
  // @@protoc_insertion_point(field_set:PlayerLogin.daily_reward_days)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PlayerLogin_2eproto__INCLUDED
