// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TheaterStatusList.proto

#ifndef PROTOBUF_TheaterStatusList_2eproto__INCLUDED
#define PROTOBUF_TheaterStatusList_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
class TheaterStatus;
class TheaterStatusDefaultTypeInternal;
extern TheaterStatusDefaultTypeInternal _TheaterStatus_default_instance_;
class TheaterStatusList;
class TheaterStatusListDefaultTypeInternal;
extern TheaterStatusListDefaultTypeInternal _TheaterStatusList_default_instance_;

namespace protobuf_TheaterStatusList_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_TheaterStatusList_2eproto

// ===================================================================

class TheaterStatus : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:TheaterStatus) */ {
 public:
  TheaterStatus();
  virtual ~TheaterStatus();

  TheaterStatus(const TheaterStatus& from);

  inline TheaterStatus& operator=(const TheaterStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TheaterStatus(TheaterStatus&& from) noexcept
    : TheaterStatus() {
    *this = ::std::move(from);
  }

  inline TheaterStatus& operator=(TheaterStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const TheaterStatus& default_instance();

  static inline const TheaterStatus* internal_default_instance() {
    return reinterpret_cast<const TheaterStatus*>(
               &_TheaterStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TheaterStatus* other);
  friend void swap(TheaterStatus& a, TheaterStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TheaterStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  TheaterStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const TheaterStatus& from);
  void MergeFrom(const TheaterStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TheaterStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // int32 update_diff = 2;
  void clear_update_diff();
  static const int kUpdateDiffFieldNumber = 2;
  ::google::protobuf::int32 update_diff() const;
  void set_update_diff(::google::protobuf::int32 value);

  // uint32 map_id = 3;
  void clear_map_id();
  static const int kMapIdFieldNumber = 3;
  ::google::protobuf::uint32 map_id() const;
  void set_map_id(::google::protobuf::uint32 value);

  // int32 player_count = 4;
  void clear_player_count();
  static const int kPlayerCountFieldNumber = 4;
  ::google::protobuf::int32 player_count() const;
  void set_player_count(::google::protobuf::int32 value);

  // int32 robot_count = 5;
  void clear_robot_count();
  static const int kRobotCountFieldNumber = 5;
  ::google::protobuf::int32 robot_count() const;
  void set_robot_count(::google::protobuf::int32 value);

  // int32 item_count = 6;
  void clear_item_count();
  static const int kItemCountFieldNumber = 6;
  ::google::protobuf::int32 item_count() const;
  void set_item_count(::google::protobuf::int32 value);

  // uint32 combat_grade = 7;
  void clear_combat_grade();
  static const int kCombatGradeFieldNumber = 7;
  ::google::protobuf::uint32 combat_grade() const;
  void set_combat_grade(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TheaterStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 update_diff_;
  ::google::protobuf::uint32 map_id_;
  ::google::protobuf::int32 player_count_;
  ::google::protobuf::int32 robot_count_;
  ::google::protobuf::int32 item_count_;
  ::google::protobuf::uint32 combat_grade_;
  mutable int _cached_size_;
  friend struct protobuf_TheaterStatusList_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TheaterStatusList : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:TheaterStatusList) */ {
 public:
  TheaterStatusList();
  virtual ~TheaterStatusList();

  TheaterStatusList(const TheaterStatusList& from);

  inline TheaterStatusList& operator=(const TheaterStatusList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TheaterStatusList(TheaterStatusList&& from) noexcept
    : TheaterStatusList() {
    *this = ::std::move(from);
  }

  inline TheaterStatusList& operator=(TheaterStatusList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const TheaterStatusList& default_instance();

  static inline const TheaterStatusList* internal_default_instance() {
    return reinterpret_cast<const TheaterStatusList*>(
               &_TheaterStatusList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(TheaterStatusList* other);
  friend void swap(TheaterStatusList& a, TheaterStatusList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TheaterStatusList* New() const PROTOBUF_FINAL { return New(NULL); }

  TheaterStatusList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const TheaterStatusList& from);
  void MergeFrom(const TheaterStatusList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TheaterStatusList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TheaterStatus result = 1;
  int result_size() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  const ::TheaterStatus& result(int index) const;
  ::TheaterStatus* mutable_result(int index);
  ::TheaterStatus* add_result();
  ::google::protobuf::RepeatedPtrField< ::TheaterStatus >*
      mutable_result();
  const ::google::protobuf::RepeatedPtrField< ::TheaterStatus >&
      result() const;

  // @@protoc_insertion_point(class_scope:TheaterStatusList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::TheaterStatus > result_;
  mutable int _cached_size_;
  friend struct protobuf_TheaterStatusList_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TheaterStatus

// uint32 id = 1;
inline void TheaterStatus::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 TheaterStatus::id() const {
  // @@protoc_insertion_point(field_get:TheaterStatus.id)
  return id_;
}
inline void TheaterStatus::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:TheaterStatus.id)
}

// int32 update_diff = 2;
inline void TheaterStatus::clear_update_diff() {
  update_diff_ = 0;
}
inline ::google::protobuf::int32 TheaterStatus::update_diff() const {
  // @@protoc_insertion_point(field_get:TheaterStatus.update_diff)
  return update_diff_;
}
inline void TheaterStatus::set_update_diff(::google::protobuf::int32 value) {
  
  update_diff_ = value;
  // @@protoc_insertion_point(field_set:TheaterStatus.update_diff)
}

// uint32 map_id = 3;
inline void TheaterStatus::clear_map_id() {
  map_id_ = 0u;
}
inline ::google::protobuf::uint32 TheaterStatus::map_id() const {
  // @@protoc_insertion_point(field_get:TheaterStatus.map_id)
  return map_id_;
}
inline void TheaterStatus::set_map_id(::google::protobuf::uint32 value) {
  
  map_id_ = value;
  // @@protoc_insertion_point(field_set:TheaterStatus.map_id)
}

// int32 player_count = 4;
inline void TheaterStatus::clear_player_count() {
  player_count_ = 0;
}
inline ::google::protobuf::int32 TheaterStatus::player_count() const {
  // @@protoc_insertion_point(field_get:TheaterStatus.player_count)
  return player_count_;
}
inline void TheaterStatus::set_player_count(::google::protobuf::int32 value) {
  
  player_count_ = value;
  // @@protoc_insertion_point(field_set:TheaterStatus.player_count)
}

// int32 robot_count = 5;
inline void TheaterStatus::clear_robot_count() {
  robot_count_ = 0;
}
inline ::google::protobuf::int32 TheaterStatus::robot_count() const {
  // @@protoc_insertion_point(field_get:TheaterStatus.robot_count)
  return robot_count_;
}
inline void TheaterStatus::set_robot_count(::google::protobuf::int32 value) {
  
  robot_count_ = value;
  // @@protoc_insertion_point(field_set:TheaterStatus.robot_count)
}

// int32 item_count = 6;
inline void TheaterStatus::clear_item_count() {
  item_count_ = 0;
}
inline ::google::protobuf::int32 TheaterStatus::item_count() const {
  // @@protoc_insertion_point(field_get:TheaterStatus.item_count)
  return item_count_;
}
inline void TheaterStatus::set_item_count(::google::protobuf::int32 value) {
  
  item_count_ = value;
  // @@protoc_insertion_point(field_set:TheaterStatus.item_count)
}

// uint32 combat_grade = 7;
inline void TheaterStatus::clear_combat_grade() {
  combat_grade_ = 0u;
}
inline ::google::protobuf::uint32 TheaterStatus::combat_grade() const {
  // @@protoc_insertion_point(field_get:TheaterStatus.combat_grade)
  return combat_grade_;
}
inline void TheaterStatus::set_combat_grade(::google::protobuf::uint32 value) {
  
  combat_grade_ = value;
  // @@protoc_insertion_point(field_set:TheaterStatus.combat_grade)
}

// -------------------------------------------------------------------

// TheaterStatusList

// repeated .TheaterStatus result = 1;
inline int TheaterStatusList::result_size() const {
  return result_.size();
}
inline void TheaterStatusList::clear_result() {
  result_.Clear();
}
inline const ::TheaterStatus& TheaterStatusList::result(int index) const {
  // @@protoc_insertion_point(field_get:TheaterStatusList.result)
  return result_.Get(index);
}
inline ::TheaterStatus* TheaterStatusList::mutable_result(int index) {
  // @@protoc_insertion_point(field_mutable:TheaterStatusList.result)
  return result_.Mutable(index);
}
inline ::TheaterStatus* TheaterStatusList::add_result() {
  // @@protoc_insertion_point(field_add:TheaterStatusList.result)
  return result_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::TheaterStatus >*
TheaterStatusList::mutable_result() {
  // @@protoc_insertion_point(field_mutable_list:TheaterStatusList.result)
  return &result_;
}
inline const ::google::protobuf::RepeatedPtrField< ::TheaterStatus >&
TheaterStatusList::result() const {
  // @@protoc_insertion_point(field_list:TheaterStatusList.result)
  return result_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TheaterStatusList_2eproto__INCLUDED
