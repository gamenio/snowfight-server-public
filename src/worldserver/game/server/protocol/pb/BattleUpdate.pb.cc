// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BattleUpdate.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BattleUpdate.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
class BattleUpdateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BattleUpdate>
     _instance;
} _BattleUpdate_default_instance_;

namespace protobuf_BattleUpdate_2eproto {

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _BattleUpdate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BattleUpdate_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}

}  // namespace protobuf_BattleUpdate_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BattleUpdate::kUpdateFlagsFieldNumber;
const int BattleUpdate::kStateFieldNumber;
const int BattleUpdate::kStartTimeFieldNumber;
const int BattleUpdate::kPreparationDurationFieldNumber;
const int BattleUpdate::kBattleDurationFieldNumber;
const int BattleUpdate::kAliveCountFieldNumber;
const int BattleUpdate::kMagicbeanCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BattleUpdate::BattleUpdate()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_BattleUpdate_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:BattleUpdate)
}
BattleUpdate::BattleUpdate(const BattleUpdate& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&update_flags_, &from.update_flags_,
    static_cast<size_t>(reinterpret_cast<char*>(&magicbean_count_) -
    reinterpret_cast<char*>(&update_flags_)) + sizeof(magicbean_count_));
  // @@protoc_insertion_point(copy_constructor:BattleUpdate)
}

void BattleUpdate::SharedCtor() {
  ::memset(&update_flags_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&magicbean_count_) -
      reinterpret_cast<char*>(&update_flags_)) + sizeof(magicbean_count_));
  _cached_size_ = 0;
}

BattleUpdate::~BattleUpdate() {
  // @@protoc_insertion_point(destructor:BattleUpdate)
  SharedDtor();
}

void BattleUpdate::SharedDtor() {
}

void BattleUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const BattleUpdate& BattleUpdate::default_instance() {
  protobuf_BattleUpdate_2eproto::InitDefaults();
  return *internal_default_instance();
}

BattleUpdate* BattleUpdate::New(::google::protobuf::Arena* arena) const {
  BattleUpdate* n = new BattleUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BattleUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:BattleUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&update_flags_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&magicbean_count_) -
      reinterpret_cast<char*>(&update_flags_)) + sizeof(magicbean_count_));
  _internal_metadata_.Clear();
}

bool BattleUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(&_internal_metadata_,
          &::google::protobuf::internal::InternalMetadataWithArenaLite::
              mutable_unknown_fields));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:BattleUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 update_flags = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &update_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 start_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 preparation_duration = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &preparation_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 battle_duration = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &battle_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 alive_count = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &alive_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 magicbean_count = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &magicbean_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BattleUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BattleUpdate)
  return false;
#undef DO_
}

void BattleUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BattleUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 update_flags = 1;
  if (this->update_flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->update_flags(), output);
  }

  // uint32 state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->state(), output);
  }

  // int32 start_time = 3;
  if (this->start_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->start_time(), output);
  }

  // int32 preparation_duration = 4;
  if (this->preparation_duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->preparation_duration(), output);
  }

  // int32 battle_duration = 5;
  if (this->battle_duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->battle_duration(), output);
  }

  // int32 alive_count = 6;
  if (this->alive_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->alive_count(), output);
  }

  // int32 magicbean_count = 7;
  if (this->magicbean_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->magicbean_count(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:BattleUpdate)
}

size_t BattleUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BattleUpdate)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 update_flags = 1;
  if (this->update_flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->update_flags());
  }

  // uint32 state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  // int32 start_time = 3;
  if (this->start_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->start_time());
  }

  // int32 preparation_duration = 4;
  if (this->preparation_duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->preparation_duration());
  }

  // int32 battle_duration = 5;
  if (this->battle_duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->battle_duration());
  }

  // int32 alive_count = 6;
  if (this->alive_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->alive_count());
  }

  // int32 magicbean_count = 7;
  if (this->magicbean_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->magicbean_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BattleUpdate::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const BattleUpdate*>(&from));
}

void BattleUpdate::MergeFrom(const BattleUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BattleUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.update_flags() != 0) {
    set_update_flags(from.update_flags());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.start_time() != 0) {
    set_start_time(from.start_time());
  }
  if (from.preparation_duration() != 0) {
    set_preparation_duration(from.preparation_duration());
  }
  if (from.battle_duration() != 0) {
    set_battle_duration(from.battle_duration());
  }
  if (from.alive_count() != 0) {
    set_alive_count(from.alive_count());
  }
  if (from.magicbean_count() != 0) {
    set_magicbean_count(from.magicbean_count());
  }
}

void BattleUpdate::CopyFrom(const BattleUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BattleUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleUpdate::IsInitialized() const {
  return true;
}

void BattleUpdate::Swap(BattleUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BattleUpdate::InternalSwap(BattleUpdate* other) {
  using std::swap;
  swap(update_flags_, other->update_flags_);
  swap(state_, other->state_);
  swap(start_time_, other->start_time_);
  swap(preparation_duration_, other->preparation_duration_);
  swap(battle_duration_, other->battle_duration_);
  swap(alive_count_, other->alive_count_);
  swap(magicbean_count_, other->magicbean_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string BattleUpdate::GetTypeName() const {
  return "BattleUpdate";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BattleUpdate

// uint32 update_flags = 1;
void BattleUpdate::clear_update_flags() {
  update_flags_ = 0u;
}
::google::protobuf::uint32 BattleUpdate::update_flags() const {
  // @@protoc_insertion_point(field_get:BattleUpdate.update_flags)
  return update_flags_;
}
void BattleUpdate::set_update_flags(::google::protobuf::uint32 value) {
  
  update_flags_ = value;
  // @@protoc_insertion_point(field_set:BattleUpdate.update_flags)
}

// uint32 state = 2;
void BattleUpdate::clear_state() {
  state_ = 0u;
}
::google::protobuf::uint32 BattleUpdate::state() const {
  // @@protoc_insertion_point(field_get:BattleUpdate.state)
  return state_;
}
void BattleUpdate::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:BattleUpdate.state)
}

// int32 start_time = 3;
void BattleUpdate::clear_start_time() {
  start_time_ = 0;
}
::google::protobuf::int32 BattleUpdate::start_time() const {
  // @@protoc_insertion_point(field_get:BattleUpdate.start_time)
  return start_time_;
}
void BattleUpdate::set_start_time(::google::protobuf::int32 value) {
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:BattleUpdate.start_time)
}

// int32 preparation_duration = 4;
void BattleUpdate::clear_preparation_duration() {
  preparation_duration_ = 0;
}
::google::protobuf::int32 BattleUpdate::preparation_duration() const {
  // @@protoc_insertion_point(field_get:BattleUpdate.preparation_duration)
  return preparation_duration_;
}
void BattleUpdate::set_preparation_duration(::google::protobuf::int32 value) {
  
  preparation_duration_ = value;
  // @@protoc_insertion_point(field_set:BattleUpdate.preparation_duration)
}

// int32 battle_duration = 5;
void BattleUpdate::clear_battle_duration() {
  battle_duration_ = 0;
}
::google::protobuf::int32 BattleUpdate::battle_duration() const {
  // @@protoc_insertion_point(field_get:BattleUpdate.battle_duration)
  return battle_duration_;
}
void BattleUpdate::set_battle_duration(::google::protobuf::int32 value) {
  
  battle_duration_ = value;
  // @@protoc_insertion_point(field_set:BattleUpdate.battle_duration)
}

// int32 alive_count = 6;
void BattleUpdate::clear_alive_count() {
  alive_count_ = 0;
}
::google::protobuf::int32 BattleUpdate::alive_count() const {
  // @@protoc_insertion_point(field_get:BattleUpdate.alive_count)
  return alive_count_;
}
void BattleUpdate::set_alive_count(::google::protobuf::int32 value) {
  
  alive_count_ = value;
  // @@protoc_insertion_point(field_set:BattleUpdate.alive_count)
}

// int32 magicbean_count = 7;
void BattleUpdate::clear_magicbean_count() {
  magicbean_count_ = 0;
}
::google::protobuf::int32 BattleUpdate::magicbean_count() const {
  // @@protoc_insertion_point(field_get:BattleUpdate.magicbean_count)
  return magicbean_count_;
}
void BattleUpdate::set_magicbean_count(::google::protobuf::int32 value) {
  
  magicbean_count_ = value;
  // @@protoc_insertion_point(field_set:BattleUpdate.magicbean_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
