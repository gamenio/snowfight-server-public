// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RealmList.proto

#ifndef PROTOBUF_RealmList_2eproto__INCLUDED
#define PROTOBUF_RealmList_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)
class Realm;
class RealmDefaultTypeInternal;
extern RealmDefaultTypeInternal _Realm_default_instance_;
class RealmList;
class RealmListDefaultTypeInternal;
extern RealmListDefaultTypeInternal _RealmList_default_instance_;

namespace protobuf_RealmList_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_RealmList_2eproto

// ===================================================================

class Realm : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Realm) */ {
 public:
  Realm();
  virtual ~Realm();

  Realm(const Realm& from);

  inline Realm& operator=(const Realm& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Realm(Realm&& from) noexcept
    : Realm() {
    *this = ::std::move(from);
  }

  inline Realm& operator=(Realm&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const Realm& default_instance();

  static inline const Realm* internal_default_instance() {
    return reinterpret_cast<const Realm*>(
               &_Realm_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Realm* other);
  friend void swap(Realm& a, Realm& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Realm* New() const PROTOBUF_FINAL { return New(NULL); }

  Realm* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const Realm& from);
  void MergeFrom(const Realm& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Realm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string address = 3;
  void clear_address();
  static const int kAddressFieldNumber = 3;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // uint32 flag = 2;
  void clear_flag();
  static const int kFlagFieldNumber = 2;
  ::google::protobuf::uint32 flag() const;
  void set_flag(::google::protobuf::uint32 value);

  // uint32 port = 4;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // float population_level = 5;
  void clear_population_level();
  static const int kPopulationLevelFieldNumber = 5;
  float population_level() const;
  void set_population_level(float value);

  // int32 timezone = 6;
  void clear_timezone();
  static const int kTimezoneFieldNumber = 6;
  ::google::protobuf::int32 timezone() const;
  void set_timezone(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Realm)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint32 port_;
  float population_level_;
  ::google::protobuf::int32 timezone_;
  mutable int _cached_size_;
  friend struct protobuf_RealmList_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RealmList : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:RealmList) */ {
 public:
  RealmList();
  virtual ~RealmList();

  RealmList(const RealmList& from);

  inline RealmList& operator=(const RealmList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RealmList(RealmList&& from) noexcept
    : RealmList() {
    *this = ::std::move(from);
  }

  inline RealmList& operator=(RealmList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const RealmList& default_instance();

  static inline const RealmList* internal_default_instance() {
    return reinterpret_cast<const RealmList*>(
               &_RealmList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RealmList* other);
  friend void swap(RealmList& a, RealmList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RealmList* New() const PROTOBUF_FINAL { return New(NULL); }

  RealmList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RealmList& from);
  void MergeFrom(const RealmList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RealmList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Realm result = 1;
  int result_size() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  const ::Realm& result(int index) const;
  ::Realm* mutable_result(int index);
  ::Realm* add_result();
  ::google::protobuf::RepeatedPtrField< ::Realm >*
      mutable_result();
  const ::google::protobuf::RepeatedPtrField< ::Realm >&
      result() const;

  // @@protoc_insertion_point(class_scope:RealmList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Realm > result_;
  mutable int _cached_size_;
  friend struct protobuf_RealmList_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Realm

// string name = 1;
inline void Realm::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Realm::name() const {
  // @@protoc_insertion_point(field_get:Realm.name)
  return name_.GetNoArena();
}
inline void Realm::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Realm.name)
}
#if LANG_CXX11
inline void Realm::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Realm.name)
}
#endif
inline void Realm::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Realm.name)
}
inline void Realm::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Realm.name)
}
inline ::std::string* Realm::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Realm.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Realm::release_name() {
  // @@protoc_insertion_point(field_release:Realm.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Realm::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Realm.name)
}

// uint32 flag = 2;
inline void Realm::clear_flag() {
  flag_ = 0u;
}
inline ::google::protobuf::uint32 Realm::flag() const {
  // @@protoc_insertion_point(field_get:Realm.flag)
  return flag_;
}
inline void Realm::set_flag(::google::protobuf::uint32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:Realm.flag)
}

// string address = 3;
inline void Realm::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Realm::address() const {
  // @@protoc_insertion_point(field_get:Realm.address)
  return address_.GetNoArena();
}
inline void Realm::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Realm.address)
}
#if LANG_CXX11
inline void Realm::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Realm.address)
}
#endif
inline void Realm::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Realm.address)
}
inline void Realm::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Realm.address)
}
inline ::std::string* Realm::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:Realm.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Realm::release_address() {
  // @@protoc_insertion_point(field_release:Realm.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Realm::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:Realm.address)
}

// uint32 port = 4;
inline void Realm::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 Realm::port() const {
  // @@protoc_insertion_point(field_get:Realm.port)
  return port_;
}
inline void Realm::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:Realm.port)
}

// float population_level = 5;
inline void Realm::clear_population_level() {
  population_level_ = 0;
}
inline float Realm::population_level() const {
  // @@protoc_insertion_point(field_get:Realm.population_level)
  return population_level_;
}
inline void Realm::set_population_level(float value) {
  
  population_level_ = value;
  // @@protoc_insertion_point(field_set:Realm.population_level)
}

// int32 timezone = 6;
inline void Realm::clear_timezone() {
  timezone_ = 0;
}
inline ::google::protobuf::int32 Realm::timezone() const {
  // @@protoc_insertion_point(field_get:Realm.timezone)
  return timezone_;
}
inline void Realm::set_timezone(::google::protobuf::int32 value) {
  
  timezone_ = value;
  // @@protoc_insertion_point(field_set:Realm.timezone)
}

// -------------------------------------------------------------------

// RealmList

// repeated .Realm result = 1;
inline int RealmList::result_size() const {
  return result_.size();
}
inline void RealmList::clear_result() {
  result_.Clear();
}
inline const ::Realm& RealmList::result(int index) const {
  // @@protoc_insertion_point(field_get:RealmList.result)
  return result_.Get(index);
}
inline ::Realm* RealmList::mutable_result(int index) {
  // @@protoc_insertion_point(field_mutable:RealmList.result)
  return result_.Mutable(index);
}
inline ::Realm* RealmList::add_result() {
  // @@protoc_insertion_point(field_add:RealmList.result)
  return result_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Realm >*
RealmList::mutable_result() {
  // @@protoc_insertion_point(field_mutable_list:RealmList.result)
  return &result_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Realm >&
RealmList::result() const {
  // @@protoc_insertion_point(field_list:RealmList.result)
  return result_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RealmList_2eproto__INCLUDED
